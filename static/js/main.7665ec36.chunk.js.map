{"version":3,"sources":["assets/qx3.svg","assets/sx.svg","assets/x.svg","assets/qx.svg","assets/vx.svg","assets/hx.svg","types/project.ts","types/entity.ts","services/dbService.ts","services/dataService.ts","components/ProjectEdit/ProjectEdit.tsx","components/Home/Home.tsx","types/symbol.ts","types/viewType.ts","types/stitch.ts","components/reducer.ts","services/localStorageService.ts","components/Store.tsx","types/zoom.ts","services/colorService.ts","components/Scroll/Scroll.tsx","components/Child.tsx","types/paths.ts","services/stitchImages.ts","components/Canvas/Canvas.tsx","components/Panel/Panel.tsx","components/Palette/Palette.tsx","types/thread.ts","components/PaleteEdit/PaletteEdit.tsx","components/RightPanel/LeftPanel.tsx","components/ViewToolBar/ViewToolBar.tsx","types/backColors.ts","components/ImageEdit/ImageEdit.tsx","components/BackPanel/BackToolBar.tsx","components/TopPanel/TopPanel.tsx","components/Editor/Editor.tsx","components/StitchTable/StitchTable.tsx","components/Print/Print.tsx","components/Test/Test.tsx","components/App.tsx","index.tsx","assets/half.svg"],"names":["module","exports","Project","name","grid","palette","height","width","color","picture","id","createdAt","Date","getTime","updatedAt","object","Object","keys","forEach","key","this","DbService","schema","version","idbFactory","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","Error","Promise","resolve","reject","request","open","onerror","onsuccess","event","target","result","onupgradeneeded","console","log","db","table","createObjectStore","keyPath","transaction","objectStore","tables","projectService","className","dbService","tableNames","map","cls","store","get","entity","uuid","put","delete","getAll","then","res","import","fn","ProjectEdit","useParams","useState","project","setProject","history","useHistory","onChangeHandler","prop","value","useEffect","onChange","e","type","parseInt","onClick","save","push","to","Home","projects","setProjects","list","ListGroup","index","createdAtDate","updatedAtDate","toLocaleString","Button","preventDefault","confirm","newProjects","splice","deleteHandler","size","variant","title","symbolTypes","viewTypes","stitchTypes","actionTypes","initialState","zoom","scale","scrollX","scrollY","stitchType","symbol","view","showSymbols","mainReducer","state","action","localStorageService","prefix","localStorage","getItem","setItem","_get","removeItem","defaultValue","obj","JSON","parse","hasOwnProperty","_put","stringify","time","now","has","StoreContext","React","createContext","DispatchContext","Store","children","useReducer","dispatch","actionList","useMemo","setZoom","setSymbol","setStitchType","setView","setShowSymbols","Provider","zoomSettings","colorService","hex","bw","indexOf","slice","length","r","g","b","toString","padZero","str","getHexContrast","strRgbToHex","match","exec","rgbToHex","len","zeros","Array","join","c","componentToHex","Scroll","horizontal","onScroll","scroll","ref","useRef","document","createElement","overflow","current","style","Child","paths","path","getStitchImages","x","vx","hx","sx","qx","qx3","half","rotate","a","urls","getData","data","mouseButton","wheelTimeOut","fetch","text","imageMap","Map","Canvas","onCellClick","staticZoom","useContext","dynamicZoom","setSize","images","setImages","zoomed","useCallback","number","Math","floor","scrolledX","scrolledY","cellSize","fontSize","aidaImgEl","querySelector","counterImgEl","image","Image","src","resize","parent","parentElement","offsetHeight","offsetWidth","emitCell","pageX","pageY","undefined","refRect","getBoundingClientRect","cellX","left","rowY","top","cellIndex","rowIndex","direction","drawCell","ctx","cell","zX","zY","stitch","contrastColor","strRgbContrast","symbolPosArr","directions","fillStyle","fill","y","arrPath","el","Path2D","get2DPath","symbolPos","shadowBlur","font","textAlign","fillText","drawSymbol","imgKey","drawStitchImage","svgEl","replace","btoa","onload","set","drawStitch","drawImage","drawAll","getContext","clearRect","fillRect","i","j","drawBackGround","globalAlpha","opacity","sWidth","sHeight","drawPicture","colIndex","drawCells","strokeStyle","strokeStyleBold","lineWidth","beginPath","moveTo","lineTo","stroke","drawGrid","scrollHandler","currentTarget","mouseDownHandler","button","getStitchImagesData","addEventListener","removeEventListener","onWheel","clearTimeout","shiftKey","altKey","deltaY","setTimeout","delta","newScale","min","max","maxScrollX","newScrollX","maxScrollY","newScrollY","onContextMenu","onMouseMove","onMouseDown","onMouseUp","Panel","vertical","border","Palette","onDoubleClick","selectedSymbol","sort","threadA","threadB","thread","borderColor","backgroundColor","selected","vendor","vendors","anchor","t","dmc","gamma","maderia","PaletteEdit","onSave","onCancel","onDelete","setVendor","search","setSearch","selectedThread","setThread","threads","filter","placeholder","LeftPanel","modalOpened","setModalOpened","editSymbol","setEditSymbol","Modal","show","onHide","Body","ViewToolBar","currentView","ButtonGroup","viewType","active","backColors","ImageEdit","setPicture","lock","setLock","aspect","maxSize","changeSize","newSize","Form","Group","File","accept","label","file","files","reader","FileReader","readAsDataURL","Check","checked","Label","Control","BackToolBar","onChangeColor","onChangePicture","colorRef","colorCustomRef","modal","setModal","Overlay","placement","rootClose","props","colors","disableAlpha","onChangeComplete","TopPanel","svg","getStitchImage","transform","Editor","steps","setSteps","step","setStep","deleteCell","newCell","clickDirection","regexp","foundKey","find","newStitch","newDirection","newPalette","contextMenu","newGrid","StitchTable","symbols","Print","xStitches","Set","backStitches","halfStitch","add","from","range","xorNum","pageRef","parts","ceil","reduce","prev","_","concat","clientWidth","clientHeight","part","Test","clicked","innerHTML","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7665ec36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/qx3.47a633fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/sx.63f4a945.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.94ebad85.svg\";","module.exports = __webpack_public_path__ + \"static/media/qx.8a9c1c2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/vx.55d7242b.svg\";","module.exports = __webpack_public_path__ + \"static/media/hx.46641971.svg\";","import {Entity} from \"./entity\";\r\nimport {PaletteType} from \"./paletteType\";\r\nimport {Cell} from \"./cell\";\r\n\r\nexport class Project extends Entity {\r\n    name: string = 'new Project';\r\n    grid: GridType = {};\r\n    palette: PaletteType = {};\r\n    height: number = 100;\r\n    width: number = 100;\r\n    color: string = '#ffffff';\r\n    picture?: Picture;\r\n}\r\n\r\nexport interface Picture {\r\n    opacity: number;\r\n    left: number,\r\n    top: number,\r\n    height: number,\r\n    sHeight: number,\r\n    width: number,\r\n    sWidth: number,\r\n    data?: string;\r\n}\r\n\r\n\r\nexport type GridType = { [key: number]: { [key: number]: Cell } };\r\n","export class Entity {\r\n    id?: string;\r\n    createdAt: number = new Date().getTime();\r\n    updatedAt: number = new Date().getTime();\r\n\r\n    import(object: any) {\r\n        Object.keys(object).forEach(key => {\r\n            // @ts-ignore\r\n            this[key] = object[key];\r\n        })\r\n        return this;\r\n    }\r\n}\r\n","export class DbService {\r\n\r\n    idbFactory: IDBFactory;\r\n\r\n    constructor(private name: string, private schema: string[], private version: number) {\r\n        // @ts-ignore\r\n        this.idbFactory = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        if (!this.idbFactory) {\r\n            throw  new Error(\"Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.\");\r\n        }\r\n    }\r\n\r\n    open(): Promise<IDBDatabase> {\r\n        return new Promise((resolve, reject) => {\r\n            const request = this.idbFactory.open(this.name, this.version);\r\n            request.onerror = () => new Error('You need to allow database');\r\n            request.onsuccess = (event: any) => {\r\n                resolve(event.target.result);\r\n            }\r\n            request.onupgradeneeded = (event: any) => {\r\n                console.log('onupgradeneeded');\r\n                const db = event.target.result;\r\n                this.schema.forEach(table => {\r\n                    db.createObjectStore(table, {keyPath: 'id'})\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    async store(name: string): Promise<IDBObjectStore> {\r\n        const db = await this.open();\r\n        return db.transaction(name, 'readwrite').objectStore(name);\r\n    }\r\n}\r\n","import {DbService} from \"./dbService\";\r\nimport {Project} from \"../types/project\";\r\nimport {Entity} from \"../types/entity\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nconst tables = [\r\n    Project\r\n]\r\n\r\nconst DB_VERSION = 2;\r\nconst DB_NAME = 'stitch';\r\n\r\nexport class DataService<T extends Entity> {\r\n\r\n    dbService: DbService;\r\n\r\n    constructor(private className: any) {\r\n        const tableNames = tables.map(cls => cls.name);\r\n        this.dbService = new DbService(DB_NAME, tableNames, DB_VERSION);\r\n    }\r\n\r\n    async get(id: string): Promise<T> {\r\n        return this.request<T>((store) => store.get(id))\r\n    }\r\n\r\n    async save(entity: T): Promise<string> {\r\n        if (!entity.id) {\r\n            entity.id = uuid();\r\n        }\r\n        entity.updatedAt = new Date().getTime()\r\n        return this.request((store) => store.put(entity))\r\n    }\r\n\r\n    async delete(entity: T): Promise<T> {\r\n        return this.request((store) => store.delete(entity.id as string))\r\n    }\r\n\r\n    async list(): Promise<T[]> {\r\n        return this.request<T[]>((store) => store.getAll()).then(res => res.map(entity => {\r\n            return (new this.className()).import(entity)\r\n        }))\r\n    }\r\n\r\n    async request<T = void>(fn: (store: IDBObjectStore) => IDBRequest): Promise<T> {\r\n        const store = await this.dbService.store(this.className.name)\r\n        return new Promise(res => fn(store).onsuccess = (event: any) => res(event.target.result))\r\n    }\r\n}\r\n\r\nexport const projectService = new DataService<Project>(Project)\r\n","import React, {FunctionComponent, useEffect, useState} from 'react';\r\nimport {useParams, useHistory, Link} from 'react-router-dom';\r\nimport {Project} from \"../../types/project\";\r\nimport {projectService} from \"../../services/dataService\";\r\n\r\nexport const ProjectEdit: FunctionComponent = () => {\r\n    const {id} = useParams();\r\n    const [project, setProject] = useState<Project>(new Project());\r\n    const history = useHistory();\r\n\r\n    function onChangeHandler(prop: string, value: any) {\r\n        setProject({...project, [prop]: value} as Project)\r\n    }\r\n\r\n\r\n    function save() {\r\n        projectService.save(project).then(id => {\r\n            history.push(`/draw/${id}`)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            projectService.get(id).then(res => setProject(res));\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label>Project</label>\r\n                <input value={project.name} onChange={e => onChangeHandler('name', e.target.value)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Height (stitches)</label>\r\n                <input type=\"number\" value={project.width}\r\n                       onChange={e => onChangeHandler('width', parseInt(e.target.value))}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Height (stitches)</label>\r\n                <input type=\"number\" value={project.height}\r\n                       onChange={e => onChangeHandler('height', parseInt(e.target.value))}/>\r\n            </div>\r\n\r\n            <button onClick={e => save()}>{project.id ? 'Save' : 'Create'}</button>\r\n            <Link to={'/' + (project.id ? `draw/${project.id}` : '')}>Cancel</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {projectService} from \"../../services/dataService\";\r\nimport {Project} from \"../../types/project\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './Home.scss';\r\nimport {Button, ListGroup, ListGroupItem} from \"react-bootstrap\";\r\n\r\nexport function Home() {\r\n\r\n    const [projects, setProjects] = useState<Project[]>([]);\r\n\r\n    useEffect(() => {\r\n        projectService.list().then(setProjects)\r\n    }, [])\r\n\r\n    function deleteHandler(index: number, event: any) {\r\n        event.preventDefault();\r\n        if (window.confirm('Do you want to delete this project ?')) {\r\n            projectService.delete(projects[index]).then(() => {\r\n                const newProjects = [...projects];\r\n                newProjects.splice(index, 1);\r\n                setProjects(newProjects);\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"projects\">\r\n                <ListGroup>\r\n                    {projects.map((project, index) => {\r\n                        const createdAtDate = new Date(project.createdAt);\r\n                        const updatedAtDate = new Date(project.updatedAt);\r\n                        return (\r\n                            <Link className={'list-group-item text-decoration-none'} to={`/draw/${project.id}`}\r\n                                  key={index}>\r\n                                <div>{project.name}</div>\r\n                                <span\r\n                                    className=\"small text-black-50\">createdAt: {createdAtDate.toLocaleString()}</span><br/>\r\n                                <span className=\"small text-black-50\">updatedAt: {updatedAtDate.toLocaleString()}</span>\r\n                                <Button onClick={(event: any) => deleteHandler(index, event)} size={'sm'}\r\n                                        className={'del-btn'}\r\n                                        variant={\"danger\"}\r\n                                        title={'delete'}>delete</Button>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                    <Link className={'list-group-item text-decoration-none'} to={`/edit`}>\r\n                        <div>create new</div>\r\n                    </Link>\r\n                </ListGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const symbolTypes = [\r\n    '♥', '♣', '♠', '○',\r\n    '◙', '☼', '▲', '▼', '#',\r\n    '$', '●', '■', '◊', '□',\r\n    '♦', '♪', '☻', '♫', 'ↄ',\r\n    '¤', '©', '®', '&', '€',\r\n    '℗', '₿', 'Ω', '∆', '∑',\r\n    '₽', '≈', '╦', '╩', '╬',\r\n    '◘', '◄', '►', 'Ɐ', 'Ꝋ',\r\n    'Ꞝ', 'Ꞷ', 'ⱥ', '∞', '∂',\r\n    '₮', '₭', '₾', '≠', '≡'\r\n]\r\n\r\nexport type SymbolType = typeof symbolTypes[number]\r\n","export const viewTypes = ['aida', 'count', 'grid', 'none'];\r\n\r\nexport type ViewType = typeof viewTypes[number];\r\n","import {SymbolType} from \"./symbol\";\r\n\r\nexport interface Stitch {\r\n    directions: Direction[];\r\n    type: StitchType;\r\n    symbol: SymbolType;\r\n}\r\n\r\nexport const stitchTypes = ['x', 'vx', 'hx', 'sx', 'qx', 'qx3', '\\\\', '/']\r\n\r\nexport type StitchType = typeof stitchTypes[number]\r\n\r\nexport type Direction = 'tr' | 'tl' | 'br' | 'bl';\r\n","import {StoreType} from \"./Store\";\r\nimport {symbolTypes} from \"../types/symbol\";\r\nimport {viewTypes} from \"../types/viewType\";\r\nimport {stitchTypes} from \"../types/stitch\";\r\n\r\nexport const actionTypes = {\r\n    SET_ZOOM: 'SET_ZOOM',\r\n    SET_SYMBOL: 'SET_SYMBOL',\r\n    SET_STITCH_TYPE: 'SET_STITCH_TYPE',\r\n    SET_VIEW: 'SET_VIEW',\r\n    SET_SHOW_SYMBOLS: 'SET_SHOW_SYMBOLS',\r\n};\r\n\r\nexport const initialState: StoreType = {\r\n    zoom: {scale: 1, scrollX: 0, scrollY: 0},\r\n    stitchType: stitchTypes[0],\r\n    symbol: symbolTypes[0],\r\n    view: viewTypes[0],\r\n    showSymbols: false\r\n};\r\n\r\nexport function mainReducer(state: StoreType, action: { type: string, value: any }) {\r\n    switch (action.type) {\r\n        case actionTypes.SET_ZOOM:\r\n            return {...state, zoom: action.value};\r\n        case actionTypes.SET_SYMBOL:\r\n            return {...state, symbol: action.value};\r\n        case actionTypes.SET_STITCH_TYPE:\r\n            return {...state, stitchType: action.value};\r\n        case actionTypes.SET_VIEW:\r\n            return {...state, view: action.value};\r\n        case actionTypes.SET_SHOW_SYMBOLS:\r\n            return {...state, showSymbols: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default class LocalStorageService {\n    prefix = '';\n\n    constructor(prefix = '') {\n        this.prefix = prefix + '_'\n    }\n\n    _get(name: string) {\n        return localStorage.getItem(this.prefix + name) as any\n    }\n\n    _put(name: string, value: any) {\n        localStorage.setItem(this.prefix + name, value);\n    }\n\n    has(name: string) {\n        return this._get(name) !== null\n    }\n\n    remove(name: string) {\n        localStorage.removeItem(this.prefix + name);\n    }\n\n    get(name: string, defaultValue?: any) {\n        let obj = JSON.parse(this._get(name));\n        return (obj && obj.hasOwnProperty('value')) ? obj.value : defaultValue;\n    }\n\n    put(name: string, value: any) {\n        this._put(name, JSON.stringify({time: Date.now(), value: value}));\n    }\n\n    time(name: string) {\n        let obj = JSON.parse(this._get(name));\n        return obj.time;\n    }\n\n    fresh(name: string, time: Date) {\n        return this.has(name) && this.time(name) > time\n    }\n}\n\nexport const localStorageService = new LocalStorageService('stich');\n","import React, {useEffect} from \"react\";\r\nimport {Zoom, zoomSettings} from \"../types/zoom\";\r\nimport {actionTypes, initialState, mainReducer} from \"./reducer\";\r\nimport {StitchType, stitchTypes} from \"../types/stitch\";\r\nimport {localStorageService} from \"../services/localStorageService\";\r\nimport {SymbolType, symbolTypes} from \"../types/symbol\";\r\nimport {ViewType} from \"../types/viewType\";\r\n\r\nexport interface StoreType {\r\n    zoom: Zoom,\r\n    stitchType: StitchType,\r\n    symbol: SymbolType,\r\n    view: ViewType,\r\n    showSymbols: boolean,\r\n}\r\n\r\nexport interface DispatchType {\r\n    setZoom: (value: Zoom) => void,\r\n    setStitchType: (value: StitchType) => void,\r\n    setSymbol: (value: SymbolType) => void,\r\n    setView: (value: ViewType) => void,\r\n    setShowSymbols: (value: boolean) => void,\r\n}\r\n\r\n// @ts-ignore\r\nexport const StoreContext = React.createContext<StoreType>();\r\n// @ts-ignore\r\nexport const DispatchContext = React.createContext<DispatchType>();\r\n\r\nexport const Store = ({children}: any) => {\r\n    const [state, dispatch] = React.useReducer(mainReducer, {\r\n        ...initialState,\r\n        zoom: localStorageService.get('zoom', initialState.zoom),\r\n        view: localStorageService.get('view', initialState.view),\r\n        stitchType: localStorageService.get('stitchType',initialState.stitchType),\r\n        symbol: localStorageService.get('symbol', initialState.symbol),\r\n        showSymbols: localStorageService.get('showSymbols', initialState.showSymbols),\r\n    });\r\n    const actionList = React.useMemo(() => ({\r\n        setZoom: (value: Zoom) => dispatch({type: actionTypes.SET_ZOOM, value}),\r\n        setSymbol: (value: StitchType) => dispatch({type: actionTypes.SET_SYMBOL, value}),\r\n        setStitchType: (value: StitchType) => dispatch({type: actionTypes.SET_STITCH_TYPE, value}),\r\n        setView: (value: ViewType) => dispatch({type: actionTypes.SET_VIEW, value}),\r\n        setShowSymbols: (value: boolean) => dispatch({type: actionTypes.SET_SHOW_SYMBOLS, value}),\r\n    }), [dispatch]);\r\n\r\n    useEffect(() => {\r\n        localStorageService.put('zoom', state.zoom);\r\n        localStorageService.put('view', state.view);\r\n        localStorageService.put('stitchType', state.stitchType);\r\n        localStorageService.put('symbol', state.symbol);\r\n        localStorageService.put('showSymbols', state.showSymbols);\r\n    }, [state])\r\n\r\n    return (\r\n        <DispatchContext.Provider value={actionList}>\r\n            <StoreContext.Provider value={state}>\r\n                {children}\r\n            </StoreContext.Provider>\r\n        </DispatchContext.Provider>\r\n    )\r\n}\r\n","export interface Zoom {\r\n    scale: number;\r\n    scrollX: number,\r\n    scrollY: number,\r\n}\r\n\r\nexport const zoomSettings = {max: 20, min: 1, speed: 1.17};\r\n","export class ColorService {\r\n    getHexContrast(hex: string = '#fff', bw = true) {\r\n        if (hex.indexOf('#') === 0) {\r\n            hex = hex.slice(1);\r\n        }\r\n        if (hex.length === 3) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        if (hex.length !== 6) {\r\n            throw new Error('Invalid HEX color.');\r\n        }\r\n        let r: any = parseInt(hex.slice(0, 2), 16),\r\n            g: any = parseInt(hex.slice(2, 4), 16),\r\n            b: any = parseInt(hex.slice(4, 6), 16);\r\n        if (bw) {\r\n            return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n                ? '#000000'\r\n                : '#FFFFFF';\r\n        }\r\n        r = (255 - r).toString(16);\r\n        g = (255 - g).toString(16);\r\n        b = (255 - b).toString(16);\r\n        return \"#\" + this.padZero(r) + this.padZero(g) + this.padZero(b);\r\n    }\r\n\r\n    strRgbContrast(str: string = 'rgb(0,0,0)') {\r\n        return this.getHexContrast(this.strRgbToHex(str));\r\n    }\r\n\r\n    strRgbToHex(str: string) {\r\n        const matchColors = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\r\n        const match = matchColors.exec(str);\r\n        if (match && match[1] && match[2] && match[3]) {\r\n            return this.rgbToHex(parseInt(match[1]),parseInt(match[2]), parseInt(match[3]))\r\n        }\r\n        throw new Error('string is not rgba')\r\n    }\r\n\r\n    private padZero(str: string, len: number = 2) {\r\n        let zeros = new Array(len).join('0');\r\n        return (zeros + str).slice(-len);\r\n    }\r\n\r\n    private componentToHex(c: number) {\r\n        const hex = c.toString(16);\r\n        return hex.length == 1 ? \"0\" + hex : hex;\r\n    }\r\n\r\n    private rgbToHex(r: number, g: number, b: number) {\r\n        return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\r\n    }\r\n}\r\n\r\nexport const colorService = new ColorService();\r\n","import React, {FunctionComponent, useEffect, useRef} from \"react\";\r\nimport './Scroll.scss'\r\nimport cls from 'classnames'\r\n\r\nexport interface ScrollPropsType {\r\n    horizontal?: boolean;\r\n    size?: number;\r\n    scroll: number;\r\n    onScroll?: (event: React.UIEvent<HTMLDivElement>) => void;\r\n}\r\n\r\nexport const Scroll: FunctionComponent<ScrollPropsType> =\r\n    ({horizontal = false, size = 0, onScroll, scroll}) => {\r\n        const ref = useRef<HTMLDivElement>(document.createElement('div'));\r\n        const overflow = ref.current ? ref.current[horizontal ? 'offsetWidth' : 'offsetHeight'] + size : 0;\r\n\r\n        useEffect(() => {\r\n            ref.current[!horizontal ? 'scrollTop' : 'scrollLeft'] = scroll;\r\n        }, [scroll])\r\n        return (\r\n\r\n            <div ref={ref} className={cls('scroll', {horizontal})} onScroll={onScroll}>\r\n                <div className=\"overflow\" style={{[horizontal ? 'width' : 'height']: overflow}}/>\r\n            </div>\r\n        )\r\n    }\r\n","import React from \"react\";\r\n\r\nexport const Child = ({children}: any) => {\r\n    return children;\r\n}\r\n","export const paths: { [key: string]: { [key: string]: { path: number[][], symbol: number[][] } } } =\r\n    {\r\n        'qx3': {\r\n            'tltrbr': {path: [[1, 0], [1, 1], [0.75, 1], [0, .25], [0, 0]], symbol: [[.75, .5]]},\r\n            'bltltr': {path: [[0, 0], [1, 0], [1, .25], [.25, 1], [0, 1]], symbol: [[.4, .5]]},\r\n            'tlblbr': {path: [[0, 1], [0, 0], [.25, 0], [1, .75], [1, 1]], symbol: [[.25, .75]]},\r\n            'blbrtr': {path: [[1, 1], [1, 0], [.75, 0], [0, .75], [0, 1]], symbol: [[.6, .75]]}\r\n        },\r\n        'qx': {\r\n            'tr': {path: [[1, 0], [1, .75], [.25, 0]], symbol: [[.8, .35]]},\r\n            'tl': {path: [[0, 0], [.75, 0], [0, .75]], symbol: [[.2, .35]]},\r\n            'bl': {path: [[0, 1], [0, .25], [.75, 1]], symbol: [[.2, .95]]},\r\n            'br': {path: [[1, 1], [.25, 1], [1, .25]], symbol: [[.8, .95]]}\r\n        },\r\n        'sx': {\r\n            'tr': {path: [[1, 0], [1, .5], [.5, .5], [.5, 0]], symbol: [[.8, .35]]},\r\n            'tl': {path: [[0, 0], [.5, 0], [.5, .5], [0, .5]], symbol: [[.2, .35]]},\r\n            'bl': {path: [[0, 1], [0, .5], [.5, .5], [.5, 1]], symbol: [[.2, .95]]},\r\n            'br': {path: [[1, 1], [.5, 1], [.5, .5], [1, .5]], symbol: [[.8, .95]]}\r\n        },\r\n        '\\\\': {\r\n            'tlbr': {path: [[0, 0], [0, .25], [.75, 1], [1, 1], [1, .75], [.25, 0]], symbol: [[.5, .75]]}\r\n        },\r\n        '/': {\r\n            'bltr': {path: [[1, 0], [1, .25], [.25, 1], [0, 1], [0, .75], [.75, 0]], symbol: [[.5, .75]]}\r\n        },\r\n        'x': {\r\n            'trtrblbr': {path: [[0, 0], [0, 1], [1, 1], [1, 0]], symbol: [[.5, .7]]}\r\n        },\r\n        'vx': {\r\n            'tlbl': {path: [[0, 0], [.5, 0], [.5, 1], [0, 1]], symbol: [[.25, .7]]},\r\n            'trbr': {path: [[.5, 0], [1, 0], [1, 1], [.5, 1]], symbol: [[.75, .7]]}\r\n        },\r\n        'hx': {\r\n            'trtl': {path: [[0, 0], [1, 0], [1, .5], [0, .5]], symbol: [[.5, .35]]},\r\n            'brbl': {path: [[0, .5], [1, .5], [1, 1], [0, 1]], symbol: [[.5, .9]]}\r\n        }\r\n    };\r\n","import {StitchType, stitchTypes} from \"../types/stitch\";\r\nimport qx3 from '../assets/qx3.svg';\r\nimport sx from '../assets/sx.svg';\r\nimport half from '../assets/half.svg';\r\nimport x from '../assets/x.svg';\r\nimport qx from '../assets/qx.svg';\r\nimport vx from '../assets/vx.svg';\r\nimport hx from '../assets/hx.svg';\r\n\r\nexport interface StitchImages {\r\n    [key: string]: { path: string, data: string, rotate: number }\r\n}\r\n\r\nexport const getStitchImages = (): StitchImages => ({\r\n    [stitchTypes[0]]: {path: x,},\r\n    [stitchTypes[1]]: {path: vx,},\r\n    [stitchTypes[2]]: {path: hx,},\r\n    [stitchTypes[3]]: {path: sx,},\r\n    [stitchTypes[4]]: {path: qx,},\r\n    [stitchTypes[5]]: {path: qx3,},\r\n    [stitchTypes[6]]: {path: half,},\r\n    [stitchTypes[7]]: {path: half, rotate: 90},\r\n} as any)\r\n\r\nexport const getStitchImage = (type: StitchType) => {\r\n    return getStitchImages()[type];\r\n}\r\n\r\nexport async function getStitchImagesData(): Promise<StitchImages> {\r\n    const urls = getStitchImages();\r\n    for (let key in urls) {\r\n        urls[key].data = await getData(urls[key].path);\r\n    }\r\n    return urls;\r\n}\r\n\r\nconst getData = (path: string): Promise<string> => {\r\n    return fetch(path).then(res => res.text())\r\n}\r\n","import React, {\r\n    FunctionComponent,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from \"react\";\r\nimport './Canvas.scss';\r\nimport {Cell} from \"../../types/cell\";\r\nimport {DispatchContext, StoreContext, StoreType} from \"../Store\";\r\nimport {Direction, Stitch, StitchType} from \"../../types/stitch\";\r\nimport {Zoom, zoomSettings} from \"../../types/zoom\";\r\nimport {colorService} from \"../../services/colorService\";\r\nimport {Project} from \"../../types/project\";\r\nimport {Scroll} from \"../Scroll/Scroll\";\r\nimport {Child} from \"../Child\";\r\nimport {paths} from \"../../types/paths\";\r\nimport {getStitchImagesData, StitchImages} from \"../../services/stitchImages\";\r\n\r\nexport interface CanvasPropsType {\r\n    project: Project;\r\n    onCellClick?: (rowIndex: number, cellIndex: number, direction: Direction, contextMenu: boolean) => void,\r\n    staticZoom?: Zoom\r\n}\r\n\r\nexport const CELL_SIZE = 4;\r\nlet mouseButton: any;\r\nlet imageMap = new Map<string, HTMLImageElement>();\r\nlet wheelTimeOut: any;\r\n\r\nexport const Canvas: FunctionComponent<CanvasPropsType> = ({\r\n                                                               project,\r\n                                                               onCellClick,\r\n                                                               staticZoom\r\n                                                           }) => {\r\n    const {zoom: dynamicZoom, view, showSymbols} = useContext(StoreContext);\r\n    const zoom = useMemo(() => staticZoom || dynamicZoom, [staticZoom, dynamicZoom]);\r\n\r\n    const {setZoom} = useContext(DispatchContext);\r\n    const [size, setSize] = useState<{ height: number, width: number }>({height: 0, width: 0});\r\n    const ref = useRef<HTMLCanvasElement>(document.createElement('canvas'));\r\n    const [images, setImages] = useState<StitchImages>()\r\n\r\n    const zoomed = useCallback((number: number) => Math.floor(number * zoom.scale), [zoom.scale]);\r\n    const scrolledX = useCallback((number: number) => Math.floor(number - zoom.scrollX), [zoom.scrollX]);\r\n    const scrolledY = useCallback((number: number) => Math.floor(number - zoom.scrollY), [zoom.scrollY]);\r\n\r\n    const cellSize = useMemo(() => zoomed(CELL_SIZE), [zoomed]);\r\n    const fontSize = cellSize / 2;\r\n    const {grid, palette} = project;\r\n\r\n    const aidaImgEl = document.querySelector('#aida') as HTMLImageElement;\r\n    const counterImgEl = document.querySelector('#counter') as HTMLImageElement;\r\n    const image = useMemo(() => {\r\n        if (project.picture && project.picture.data) {\r\n            const image = new Image();\r\n            image.src = project.picture.data;\r\n            return image;\r\n        }\r\n        return null;\r\n    }, [project.picture])\r\n\r\n\r\n    function resize() {\r\n        const parent = ref.current.parentElement;\r\n        if (parent) {\r\n            setSize({height: parent.offsetHeight, width: parent.offsetWidth})\r\n        }\r\n    }\r\n\r\n    function emitCell(pageX: number, pageY: number) {\r\n        if (mouseButton === undefined) return;\r\n        const refRect = ref.current.getBoundingClientRect();\r\n        const cellX = (pageX - refRect.left + zoom.scrollX) / cellSize\r\n        const rowY = (pageY - refRect.top + zoom.scrollY) / cellSize\r\n        const cellIndex = Math.floor(cellX);\r\n        const rowIndex = Math.floor(rowY);\r\n        const direction = (rowY - rowIndex > .5 ? 'b' : 't') + (cellX - cellIndex > .5 ? 'r' : 'l') as Direction;\r\n        if (rowIndex < project.height && cellIndex < project.width) {\r\n            onCellClick && onCellClick(rowIndex, cellIndex, direction, mouseButton === 2);\r\n        }\r\n    }\r\n\r\n    function drawCell(ctx: CanvasRenderingContext2D, cell: Cell, cellIndex: number, rowIndex: number) {\r\n        const zX = scrolledX(cellIndex * cellSize);\r\n        const zY = scrolledY(rowIndex * cellSize);\r\n        if (zX > size.width || zY > size.height) {\r\n            return;\r\n        }\r\n        cell.forEach(stitch => {\r\n            const color = palette[stitch.symbol].color;\r\n            if (showSymbols) {\r\n                const contrastColor = colorService.strRgbContrast(color);\r\n                const symbolPosArr = paths[stitch.type][stitch.directions.join('')].symbol;\r\n                ctx.fillStyle = color;\r\n                ctx.fill(get2DPath(zX, zY, stitch));\r\n                symbolPosArr.forEach(symbolPos => {\r\n                    drawSymbol(ctx, zX + cellSize * symbolPos[0], zY + cellSize * symbolPos[1], contrastColor, stitch.symbol);\r\n                })\r\n            } else {\r\n                drawStitch(ctx, zX, zY, stitch, color);\r\n            }\r\n        })\r\n    }\r\n\r\n    function drawStitch(ctx: CanvasRenderingContext2D, x: number, y: number, stitch: Stitch, color: string) {\r\n        if (!images) return;\r\n        const imgKey = color + stitch.type;\r\n        if (imageMap.has(imgKey)) {\r\n            drawStitchImage(ctx, imageMap.get(imgKey) as HTMLImageElement, x, y, stitch)\r\n        } else {\r\n            const svgEl = images[stitch.type].data.replace(/#fff/g, color);\r\n            const image = new Image();\r\n            image.src = 'data:image/svg+xml;base64,' + btoa(svgEl);\r\n            image.onload = () => {\r\n                imageMap.set(imgKey, image);\r\n                drawStitchImage(ctx, image, x, y, stitch)\r\n            };\r\n        }\r\n    }\r\n\r\n    function drawStitchImage(ctx: CanvasRenderingContext2D, image: HTMLImageElement, x: number, y: number, stitch: Stitch) {\r\n        let height = cellSize;\r\n        let width = cellSize;\r\n        if (stitch.type === 'hx') {\r\n            height = cellSize / 2;\r\n            if (stitch.directions.join('') === 'brbl') {\r\n                y = y + cellSize / 2;\r\n            }\r\n        }\r\n\r\n        if (stitch.type === 'vx') {\r\n            width = cellSize / 2;\r\n            if (stitch.directions.join('') === 'trbr') {\r\n                x = x + cellSize / 2;\r\n            }\r\n        }\r\n        ctx.drawImage(image, x, y, width, height);\r\n    }\r\n\r\n    function drawSymbol(ctx: CanvasRenderingContext2D, x: number, y: number, color: string, symbol: string) {\r\n        ctx.fillStyle = color;\r\n        ctx.shadowBlur = 0;\r\n        ctx.font = `${fontSize}px Arial`;\r\n        ctx.textAlign = \"center\"\r\n        ctx.fillText(symbol, x, y)\r\n    }\r\n\r\n    function get2DPath(x: number, y: number, stitch: Stitch) {\r\n        const arrPath = paths[stitch.type][stitch.directions.join('')].path;\r\n        const str = [...arrPath, arrPath[0]].map((el, index) => {\r\n            return `${index === 0 ? 'm' : 'L'}${x + el[0] * cellSize},${y + el[1] * cellSize}`;\r\n        }).join('') + 'z';\r\n        return new Path2D(str);\r\n    }\r\n\r\n    function drawCells(ctx: CanvasRenderingContext2D) {\r\n        Object.keys(grid).forEach((rowIndex: any) => {\r\n            Object.keys(grid[rowIndex]).forEach((colIndex: any) => {\r\n                const cell = grid[rowIndex][colIndex];\r\n                drawCell(ctx, cell, colIndex, rowIndex);\r\n            })\r\n        })\r\n    }\r\n\r\n    function drawBackGround(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(scrolledX(0), scrolledY(0), project.width * cellSize, project.height * cellSize);\r\n        if (view === 'aida' || view === 'count') {\r\n            let i = 0;\r\n            while (i < project.height) {\r\n                let j = 0;\r\n                while (j < project.width) {\r\n                    ctx.drawImage(view === 'aida' ? aidaImgEl : counterImgEl,\r\n                        scrolledX(j * cellSize),\r\n                        scrolledY(i * cellSize),\r\n                        cellSize,\r\n                        cellSize)\r\n                    j++;\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        ctx.fillStyle = `${project.color}88`;\r\n        ctx.fillRect(scrolledX(0), scrolledY(0), project.width * cellSize, project.height * cellSize);\r\n    }\r\n\r\n    function drawGrid(ctx: CanvasRenderingContext2D) {\r\n        const gridSize = 10;\r\n        let i = 0;\r\n        let j = 0;\r\n        const strokeStyle = `rgba(0,0,0,${(zoom.scale - zoomSettings.min) / 2})`;\r\n        const strokeStyleBold = `rgba(0,0,0,${zoom.scale / 2})`;\r\n        while (i <= project.height) {\r\n            ctx.lineWidth = zoom.scale - zoomSettings.min;\r\n            ctx.lineWidth = i % gridSize ? 1 : 2;\r\n            ctx.strokeStyle = i % gridSize ? strokeStyle : strokeStyleBold;\r\n            ctx.beginPath();\r\n            ctx.moveTo(scrolledX(0), scrolledY(i * cellSize));\r\n            ctx.lineTo(scrolledX(project.width * cellSize), scrolledY(i * cellSize));\r\n            ctx.stroke();\r\n            i++;\r\n        }\r\n        while (j <= project.width) {\r\n            ctx.lineWidth = j % gridSize ? 1 : 2;\r\n            ctx.strokeStyle = j % gridSize ? strokeStyle : strokeStyleBold;\r\n            ctx.beginPath();\r\n            ctx.moveTo(scrolledX(j * cellSize), scrolledY(0));\r\n            ctx.lineTo(scrolledX(j * cellSize), scrolledY(project.height * cellSize));\r\n            ctx.stroke();\r\n            j++;\r\n        }\r\n    }\r\n\r\n    function drawPicture(ctx: CanvasRenderingContext2D) {\r\n        const {picture} = project;\r\n        if (image && picture) {\r\n            ctx.globalAlpha = picture.opacity;\r\n            ctx.drawImage(\r\n                image,\r\n                scrolledX(picture.left * cellSize),\r\n                scrolledY(picture.top * cellSize),\r\n                picture.sWidth * cellSize,\r\n                picture.sHeight * cellSize\r\n            );\r\n            ctx.globalAlpha = 1;\r\n        }\r\n    }\r\n\r\n    function drawAll() {\r\n        const ctx = getCtx();\r\n        ctx.clearRect(0, 0, size.width, size.height);\r\n        drawBackGround(ctx);\r\n        drawPicture(ctx);\r\n        drawCells(ctx);\r\n        if (view === 'grid') drawGrid(ctx);\r\n    }\r\n\r\n    function getCtx(): CanvasRenderingContext2D {\r\n        // @ts-ignore\r\n        return ref.current.getContext('2d');\r\n    }\r\n\r\n    function wheel(e: React.WheelEvent<HTMLCanvasElement>) {\r\n        if (staticZoom) return;\r\n        clearTimeout(wheelTimeOut);\r\n        const {shiftKey, altKey, deltaY} = e;\r\n        wheelTimeOut = setTimeout(() => {\r\n            const delta = deltaY < 0 ? -150 : 150;\r\n            if (altKey) {\r\n                const {scale} = zoom;\r\n                const newScale = (delta < 0 ? Math.min(zoomSettings.max, scale * zoomSettings.speed) : Math.max(zoomSettings.min, scale * (1 / zoomSettings.speed)));\r\n                if (newScale !== scale) {\r\n                    setZoom({\r\n                        ...zoom,\r\n                        scale: newScale,\r\n                    });\r\n                }\r\n            } else {\r\n                if (project) {\r\n                    if (shiftKey) {\r\n                        if (project.width * cellSize > size.width) {\r\n                            const maxScrollX = project.width * cellSize - size.width;\r\n                            const newScrollX = zoom.scrollX + delta;\r\n                            setZoom({\r\n                                ...zoom,\r\n                                scrollX: 0 > newScrollX ? 0 : newScrollX >= maxScrollX ? maxScrollX : newScrollX\r\n                            })\r\n                        }\r\n                    } else {\r\n                        if (project.height * cellSize > size.height) {\r\n                            const maxScrollY = project.height * cellSize - size.height;\r\n                            const newScrollY = zoom.scrollY + delta;\r\n                            setZoom({\r\n                                ...zoom,\r\n                                scrollY: 0 > newScrollY ? 0 : newScrollY >= maxScrollY ? maxScrollY : newScrollY\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }, 30)\r\n    }\r\n\r\n    function scrollHandler(x = true, event: React.UIEvent<HTMLDivElement>) {\r\n        const scroll = event.currentTarget[x ? 'scrollLeft' : 'scrollTop'];\r\n        setZoom({...zoom, [x ? 'scrollX' : 'scrollY']: scroll});\r\n    }\r\n\r\n    useEffect(() => {\r\n        resize();\r\n        getStitchImagesData().then(data => {\r\n            setImages(data);\r\n            resize();\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        drawAll();\r\n    }, [project, size, zoom, view, showSymbols]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resize);\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n        }\r\n    }, [project]);\r\n\r\n    function mouseDownHandler(event: React.MouseEvent) {\r\n        event.preventDefault();\r\n        if (event.type === 'mousedown') {\r\n            mouseButton = event.button;\r\n            emitCell(event.pageX, event.pageY);\r\n        } else {\r\n            mouseButton = undefined;\r\n        }\r\n    }\r\n\r\n    function mouseMoveHandler(event: React.MouseEvent) {\r\n        emitCell(event.pageX, event.pageY);\r\n    }\r\n\r\n    return (\r\n        <Child>\r\n            {!staticZoom && <Scroll scroll={zoom.scrollY} onScroll={e => scrollHandler(false, e)}\r\n                                    size={cellSize * project.height - size.height}/>}\r\n            <div className=\"scrollContainer\">\r\n                <div className=\"canvasContainer\">\r\n                    <canvas onWheel={wheel}\r\n                            onContextMenu={e => e.preventDefault()}\r\n                            onMouseMove={mouseMoveHandler}\r\n                            onMouseDown={mouseDownHandler}\r\n                            onMouseUp={mouseDownHandler}\r\n                            height={size.height}\r\n                            width={size.width}\r\n                            ref={ref}\r\n                            className=\"Canvas\"/>\r\n                </div>\r\n                {!staticZoom && <Scroll scroll={zoom.scrollX} onScroll={e => scrollHandler(true, e)}\r\n                                        size={cellSize * project.width - size.width}\r\n                                        horizontal={true}/>}\r\n            </div>\r\n        </Child>\r\n    )\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\nimport './Panel.scss'\r\nimport cls from 'classnames';\r\n\r\nexport interface PanelType {\r\n    vertical?: boolean;\r\n    size?: number;\r\n    border?: 'Left' | 'Right' | 'Top' | 'Bottom';\r\n}\r\n\r\nexport const Panel: FunctionComponent<PanelType> =\r\n    ({\r\n         vertical,\r\n         children,\r\n         size,\r\n         border = 'Bottom'\r\n     }) => {\r\n        const style: any = {};\r\n        if (size) {\r\n            style[vertical ? 'width' : 'height'] = size;\r\n        }\r\n        if (border) {\r\n            style['border' + border] = '1px solid #cecece'\r\n        }\r\n        return (\r\n            <div style={style} className={cls({vertical}, 'Panel', 'p-1')}>{children}</div>\r\n        )\r\n    }\r\n\r\n","import React, {FunctionComponent, useCallback, useContext} from \"react\";\r\nimport './Palette.scss'\r\nimport {PaletteType} from \"../../types/paletteType\";\r\nimport cls from 'classnames'\r\nimport {colorService} from \"../../services/colorService\";\r\nimport {DispatchContext, StoreContext} from \"../Store\";\r\nimport {SymbolType, symbolTypes} from \"../../types/symbol\";\r\nimport {Thread} from \"../../types/thread\";\r\n\r\nexport interface PalettePropsType {\r\n    onDoubleClick?: (symbol: SymbolType) => void,\r\n    palette: PaletteType\r\n}\r\n\r\nexport const Palette: FunctionComponent<PalettePropsType> = ({palette, onDoubleClick}) => {\r\n    const {symbol: selectedSymbol} = useContext(StoreContext);\r\n    const {setSymbol} = useContext(DispatchContext);\r\n    return (\r\n        <div className=\"Palette\">\r\n            {symbolTypes\r\n                .sort((a, b) => {\r\n                    const threadA = palette[a];\r\n                    const threadB = palette[b];\r\n                    if (!!threadA && !!threadB || !threadA && !threadB) return a > b ? -1 : 1;\r\n                    return threadA ? -1 : 1;\r\n                })\r\n                .map((symbol, index) => {\r\n                        const thread: Thread | undefined = palette[symbol];\r\n                        const contrastColor = thread ? colorService.strRgbContrast(thread.color) : 'black';\r\n                        const style = {borderColor: contrastColor, color: contrastColor, backgroundColor: thread?.color}\r\n                        return (\r\n                            <div className={cls('colorBox', {selected: selectedSymbol == symbol})}\r\n                                 key={index}\r\n                                 style={style}\r\n                                 title={thread && (thread.vendor + ' ' + thread.name)}\r\n                                 onDoubleClick={e => onDoubleClick && onDoubleClick(symbol)}\r\n                                 onContextMenu={e => {\r\n                                     e.preventDefault();\r\n                                     onDoubleClick && onDoubleClick(symbol)\r\n                                 }}\r\n                                 onClick={e => setSymbol(symbol)}>\r\n                                {symbol}\r\n                            </div>\r\n                        )\r\n                    }\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import anchor from '../assets/threads/anchor.json'\r\nimport dmc from '../assets/threads/dmc.json'\r\nimport gamma from '../assets/threads/gamma.json'\r\nimport maderia from '../assets/threads/maderia.json'\r\n\r\nexport interface Thread {\r\n    color: string;\r\n    name: string;\r\n    vendor: string;\r\n}\r\n\r\nexport const vendors: { [key: string]: Thread[] } = {\r\n    anchor: anchor.map(t => ({...t, vendor: 'anchor'})),\r\n    dmc: dmc.map(t => ({...t, vendor: 'dmc'})),\r\n    gamma: gamma.map(t => ({...t, vendor: 'gamma'})),\r\n    maderia: maderia.map(t => ({...t, vendor: 'maderia'})),\r\n} as any;\r\n","import React, {FunctionComponent, useEffect, useMemo, useState} from \"react\";\r\nimport {Thread, vendors} from \"../../types/thread\";\r\nimport cls from 'classnames';\r\nimport './PaletteEdit.scss';\r\nimport {colorService} from \"../../services/colorService\";\r\n\r\nexport interface PaletteEditType {\r\n    thread?: Thread,\r\n    onSave?: (thread: Thread) => void\r\n    onCancel?: () => void\r\n    onDelete?: () => void\r\n    edit?: boolean\r\n}\r\n\r\nexport const PaletteEdit: FunctionComponent<PaletteEditType> =\r\n    ({\r\n         thread,\r\n         onSave,\r\n         onCancel,\r\n         onDelete\r\n     }) => {\r\n        const [vendor, setVendor] = useState(thread?.vendor || Object.keys(vendors)[0])\r\n        const [search, setSearch] = useState<string>('')\r\n        const [selectedThread, setThread] = useState<Thread>(thread || vendors[vendor][0]);\r\n\r\n        useEffect(() => {\r\n            if (thread) {\r\n                setVendor(thread.vendor as string)\r\n            }\r\n        }, [thread])\r\n\r\n        function deleteHandler() {\r\n            if (window.confirm('Do you really want to delete thread from project?')) {\r\n                onDelete && onDelete();\r\n            }\r\n        }\r\n\r\n        const threads = useMemo(() => vendors[vendor].filter(thread => !search.length || thread.name.indexOf(search) !== -1), [vendor, search])\r\n\r\n        return (\r\n            <div className=\"PaletteEdit\">\r\n                <hr/>\r\n                <label>Vendor</label>\r\n                <select value={vendor} onChange={e => setVendor(e.target.value)}>\r\n                    {Object.keys(vendors).map(vendor =>\r\n                        <option key={vendor} value={vendor}>{vendor}</option>)}\r\n                </select>\r\n                <hr/>\r\n                <label>Threads</label>\r\n                <input placeholder='search code...' value={search} onChange={e => setSearch(e.target.value)}/>\r\n                <div className=\"threadContainer\">\r\n                    {threads.map((thread, key) => {\r\n                            const color = colorService.strRgbContrast(thread.color);\r\n                            return (\r\n                                <div\r\n                                    style={{\r\n                                        borderColor: color,\r\n                                        backgroundColor: thread.color,\r\n                                        color: color\r\n                                    }}\r\n                                    onClick={e => setThread(thread)}\r\n                                    onDoubleClick={e => onSave && onSave(thread)}\r\n                                    key={key}\r\n                                    className={cls('thread', {selected: thread.name === selectedThread?.name})}>\r\n                                    {thread.name}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    )}\r\n                </div>\r\n                <hr/>\r\n                <button onClick={e => onSave && onSave(selectedThread)}>Save</button>\r\n                <button onClick={e => onCancel && onCancel()}>Cancel</button>\r\n                <button onClick={deleteHandler}>Delete</button>\r\n            </div>\r\n        )\r\n    }\r\n","import React, {FunctionComponent, useContext, useEffect, useMemo, useState} from \"react\";\r\nimport {Panel} from \"../Panel/Panel\";\r\nimport {Palette} from \"../Palette/Palette\";\r\nimport {PaletteType} from \"../../types/paletteType\";\r\nimport {PaletteEdit} from \"../PaleteEdit/PaletteEdit\";\r\nimport {SymbolType, symbolTypes} from \"../../types/symbol\";\r\nimport {Thread} from \"../../types/thread\";\r\nimport {Modal} from \"react-bootstrap\";\r\n\r\nexport interface RightPanelType {\r\n    onChange: (palette: PaletteType) => void,\r\n    onDelete: (symbol: SymbolType) => void,\r\n    palette: PaletteType\r\n}\r\n\r\nexport const LeftPanel: FunctionComponent<RightPanelType> = ({palette = {}, onChange, onDelete}) => {\r\n    const [modalOpened, setModalOpened] = useState(false);\r\n    const [editSymbol, setEditSymbol] = useState<SymbolType>(symbolTypes[0]);\r\n\r\n    function saveHandler(thread: Thread) {\r\n        onChange({...palette, [editSymbol]: thread});\r\n        setModalOpened(false)\r\n    }\r\n\r\n    function deleteHandler() {\r\n        onDelete(editSymbol);\r\n        setModalOpened(false)\r\n    }\r\n\r\n    function editHandler(symbol: SymbolType) {\r\n        setEditSymbol(symbol);\r\n        setModalOpened(true);\r\n    }\r\n\r\n    return (\r\n        <Panel size={82} vertical={true} border={\"Right\"}>\r\n            <Palette palette={palette} onDoubleClick={editHandler}/>\r\n            <Modal show={modalOpened} onHide={() => setModalOpened(false)}>\r\n                <Modal.Body>\r\n                    <PaletteEdit thread={palette[editSymbol]}\r\n                                 onSave={saveHandler}\r\n                                 onCancel={() => setModalOpened(false)}\r\n                                 onDelete={deleteHandler}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Panel>\r\n    )\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport {DispatchContext, StoreContext} from \"../Store\";\r\nimport {viewTypes} from \"../../types/viewType\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\n\r\nexport const ViewToolBar = () => {\r\n    const {view: currentView} = useContext(StoreContext);\r\n    const {setView} = useContext(DispatchContext)\r\n\r\n    return (\r\n        <ButtonGroup className={'mr-1'}>\r\n            {viewTypes.map((viewType, key) =>\r\n                <Button size={\"sm\"} key={key} active={viewType === currentView}\r\n                        onClick={() => setView(viewType)}>\r\n                    {viewType}\r\n                </Button>\r\n            )}\r\n        </ButtonGroup>\r\n    )\r\n}\r\n","export const backColors = [\r\n    '#ffffff',\r\n    '#e5d9c2',\r\n    '#b3c2cc',\r\n    '#cfe3cf',\r\n    '#e3bdbd',\r\n    '#c4c4c4',\r\n    '#b88c82',\r\n    '#e5122b',\r\n    '#005e33',\r\n    '#474747',\r\n    '#2b4269',\r\n    '#c7d1d4',\r\n]\r\n","import React, {FunctionComponent, useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport './ImageEdit.scss'\r\nimport {Picture, Project} from \"../../types/project\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nexport interface ImageEditProps {\r\n    onChange: (picture?: Picture) => void;\r\n    project: Project\r\n}\r\n\r\nexport const ImageEdit: FunctionComponent<ImageEditProps> = ({project, onChange}) => {\r\n\r\n    const newPicture = {height: 0, width: 0, left: 0, top: 0, sWidth: 0, sHeight: 0, opacity: .5};\r\n    const [picture, setPicture] = useState<Picture>(newPicture);\r\n    const [lock, setLock] = useState(true)\r\n    const aspect = useMemo(() => picture.width / picture.height, [picture])\r\n    const maxSize = useMemo(() => ({\r\n        width: aspect < 1 ? project.height : Math.floor(project.width / aspect),\r\n        height: aspect >= 1 ? project.width : Math.floor(aspect * project.height)\r\n    }), [aspect, picture])\r\n\r\n    function fileChange(e: any) {\r\n        const {target: {files: [file]}} = e;\r\n        if (file as File) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                if (e.target) {\r\n                    const image = new Image();\r\n                    image.onload = () => {\r\n                        if (e.target) {\r\n                            const aspect = image.width / image.height;\r\n                            setPicture({\r\n                                ...picture,\r\n                                data: e.target.result as string,\r\n                                left: 0, top: 0, height: image.height, width: image.width,\r\n                                sWidth: aspect >= 1 ? project.width : Math.floor(aspect * project.height),\r\n                                sHeight: aspect < 1 ? project.height : Math.floor(project.width / aspect),\r\n                            })\r\n                        }\r\n                    }\r\n                    image.src = e.target.result as string;\r\n                }\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    function changeSize(size: number, prop: string) {\r\n        const newSize = {[prop]: size};\r\n        if (lock) {\r\n            newSize[(prop === 'sWidth' ? 'sHeight' : 'sWidth')] = prop === 'sWidth' ? Math.floor(size / aspect) : Math.floor(size * aspect);\r\n        }\r\n        setPicture({...picture, ...newSize})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (project.picture) {\r\n            setPicture(project.picture);\r\n        }\r\n    }, [project.picture])\r\n\r\n    return (\r\n        <div className={'ImageEdit'}>\r\n            {picture.data && <img src={picture.data}/>}\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.File accept=\"image/*\" label=\"Image\" onChange={fileChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check label={'Lock aspect ratio'}\r\n                                checked={lock}\r\n                                onChange={() => setLock(!lock)}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Height</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={maxSize.height}\r\n                                  value={picture.sHeight}\r\n                                  onChange={e => changeSize(parseInt(e.target.value), 'sHeight')}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Width</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={maxSize.width}\r\n                                  value={picture.sWidth}\r\n                                  onChange={e => changeSize(parseInt(e.target.value), 'sWidth')}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>offset X</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={-picture.sWidth}\r\n                                  max={maxSize.width}\r\n                                  value={picture.left}\r\n                                  onChange={e => setPicture({...picture, left: parseInt(e.target.value)})}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>offset Y</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={-picture.sHeight}\r\n                                  max={maxSize.height}\r\n                                  value={picture.top}\r\n                                  onChange={e => setPicture({...picture, top: parseInt(e.target.value)})}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Opacity %</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={100}\r\n                                  value={Math.floor(picture.opacity * 100)}\r\n                                  onChange={e => setPicture({...picture, opacity: parseInt(e.target.value) / 100})}/>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={() => onChange({...picture})}>Save</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {FunctionComponent, useRef, useState} from \"react\";\r\nimport {Button, ButtonGroup, Modal, Overlay} from \"react-bootstrap\";\r\nimport {ChromePicker, GithubPicker} from 'react-color';\r\nimport {backColors} from \"../../types/backColors\";\r\nimport {Picture, Project} from \"../../types/project\";\r\nimport {ImageEdit} from \"../ImageEdit/ImageEdit\";\r\n\r\nexport interface BackToolBarType {\r\n    onChangeColor: (color: string) => void,\r\n    onChangePicture: (picture?: Picture) => void,\r\n    project: Project;\r\n}\r\n\r\nexport const BackToolBar: FunctionComponent<BackToolBarType> = ({onChangeColor, project, onChangePicture}) => {\r\n\r\n    const colorRef = useRef<any>(null);\r\n    const colorCustomRef = useRef<any>(null);\r\n    const [modal, setModal] = useState<'custom' | 'color' | 'image' | null>(null);\r\n\r\n    return (\r\n        <ButtonGroup>\r\n            <Button onClick={() => setModal('color')} ref={colorRef} size={\"sm\"}>Color</Button>\r\n            <Overlay target={colorRef.current}\r\n                     placement={'bottom-start'}\r\n                     rootClose={true}\r\n                     show={modal === 'color'}\r\n                     onHide={() => setModal(null)}>\r\n                {(props: any) => (\r\n                    <div {...props} style={{...props.style, top: 6,}}>\r\n                        <GithubPicker colors={backColors} onChange={color => {\r\n                            setModal(null);\r\n                            onChangeColor(color.hex)\r\n                        }}/>\r\n                    </div>\r\n                )}\r\n            </Overlay>\r\n            <Button onClick={() => setModal('custom')} ref={colorCustomRef} size={\"sm\"}>Custom Color</Button>\r\n            <Overlay target={colorCustomRef.current}\r\n                     rootClose={true}\r\n                     onHide={() => setModal(null)}\r\n                     placement={'bottom-start'}\r\n                     show={modal === 'custom'}>\r\n                {(props: any) => (\r\n                    <div {...props} style={{...props.style, top: 6,}}>\r\n                        <ChromePicker\r\n                            color={project.color}\r\n                            disableAlpha={true}\r\n                            onChangeComplete={color => onChangeColor(color.hex)}/>\r\n                    </div>\r\n                )}\r\n            </Overlay>\r\n            <Button size={\"sm\"} onClick={() => setModal('image')}>Image</Button>\r\n            <Modal show={modal === 'image'} onHide={() => setModal(null)}>\r\n                <Modal.Body>\r\n                    <ImageEdit project={project} onChange={picture => {\r\n                        setModal(null);\r\n                        onChangePicture(picture);\r\n                    }}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </ButtonGroup>\r\n    );\r\n}\r\n","import React, {FunctionComponent, useContext} from \"react\";\r\nimport {Panel} from \"../Panel/Panel\";\r\nimport {stitchTypes} from \"../../types/stitch\";\r\nimport {DispatchContext, StoreContext} from \"../Store\";\r\nimport {ViewToolBar} from \"../ViewToolBar/ViewToolBar\";\r\nimport {BackToolBar, BackToolBarType} from \"../BackPanel/BackToolBar\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getStitchImage} from \"../../services/stitchImages\";\r\n\r\n\r\nexport type TopPanelType = {} & BackToolBarType\r\n\r\nexport const TopPanel: FunctionComponent<TopPanelType> = ({onChangeColor, project, onChangePicture}) => {\r\n\r\n    const {setStitchType, setShowSymbols} = useContext(DispatchContext);\r\n    const {stitchType, showSymbols} = useContext(StoreContext);\r\n\r\n    return (\r\n        <Panel>\r\n            <ButtonGroup className={\"mr-1\"}>\r\n                {stitchTypes.map((type, index) => {\r\n                        const svg = getStitchImage(type);\r\n                        return (\r\n                            <Button size={\"sm\"}\r\n                                    active={type === stitchType}\r\n                                    key={index}\r\n                                    onClick={() => setStitchType(type)}>\r\n                                <img src={svg.path} style={{transform: `rotate(${svg.rotate}deg)`}}/>\r\n                            </Button>\r\n                        )\r\n                    }\r\n                )}\r\n            </ButtonGroup>\r\n            <ButtonGroup className={\"mr-1\"}>\r\n                <Button size={\"sm\"} onClick={() => setShowSymbols(!showSymbols)}>\r\n                    {showSymbols ? 'symbols' : 'stitches'}\r\n                </Button>\r\n            </ButtonGroup>\r\n            <ViewToolBar/>\r\n            <BackToolBar project={project}\r\n                         onChangeColor={onChangeColor}\r\n                         onChangePicture={onChangePicture}/>\r\n            <Link className={\"ml-1 btn btn-primary btn-sm\"}\r\n                  to={`/print/${project.id}`} target={'_blank'}>Print</Link>\r\n            <Link className={\"ml-auto btn btn-primary btn-sm\"}\r\n                  to={`/`}>Home</Link>\r\n        </Panel>\r\n    )\r\n}\r\n","import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport './Editor.scss';\r\nimport {GridType, Project} from \"../../types/project\";\r\nimport {Canvas} from \"../Canvas/Canvas\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {projectService} from \"../../services/dataService\";\r\nimport {StoreContext} from \"../Store\";\r\nimport {LeftPanel} from \"../RightPanel/LeftPanel\";\r\nimport {TopPanel} from \"../TopPanel/TopPanel\";\r\nimport {Direction, Stitch, StitchType} from \"../../types/stitch\";\r\nimport {SymbolType} from \"../../types/symbol\";\r\nimport {Cell} from \"../../types/cell\";\r\nimport {paths} from \"../../types/paths\";\r\n\r\nexport const Editor = () => {\r\n    const [project, setProject] = useState<Project>();\r\n    const {id} = useParams();\r\n    const history = useHistory();\r\n    const {symbol, stitchType} = useContext(StoreContext);\r\n    const [steps, setSteps] = useState<Project[]>([]);\r\n    const [step, setStep] = useState<number>(-1);\r\n\r\n    function deleteThreadHandler(symbol: SymbolType) {\r\n        if (project) {\r\n            Object.keys(project.grid).forEach((rowIndex: any) => {\r\n                Object.keys(project.grid[rowIndex]).forEach((colIndex: any) => {\r\n                    const cell = project.grid[rowIndex][colIndex].filter(stitch => stitch.symbol !== symbol);\r\n                    if (!cell.length) {\r\n                        deleteCell(project.grid, rowIndex, colIndex)\r\n                    } else {\r\n                        project.grid[rowIndex][colIndex] = [...cell];\r\n                    }\r\n                })\r\n            })\r\n            const newPalette = {...project.palette}\r\n            delete newPalette[symbol];\r\n            setProject({...project, palette: newPalette, grid: {...project.grid}} as Project);\r\n        }\r\n    }\r\n\r\n    function deleteCell(grid: GridType, rowIndex: number, colIndex: number): GridType {\r\n        delete grid[rowIndex][colIndex];\r\n        if (Object.keys(grid[rowIndex]).length === 0) {\r\n            delete grid[rowIndex];\r\n        }\r\n        return grid;\r\n    }\r\n\r\n    function cellClickHandler(rowIndex: number, colIndex: number, direction: Direction, contextMenu: boolean) {\r\n        if (!project) return\r\n        const newGrid = {...project.grid};\r\n        if (!newGrid[rowIndex]) newGrid[rowIndex] = {};\r\n        if (symbol && project.palette[symbol]) {\r\n            if (!contextMenu) {\r\n                newGrid[rowIndex][colIndex] = newCell(symbol, direction, newGrid[rowIndex][colIndex] || [])\r\n            } else {\r\n                deleteCell(newGrid, rowIndex, colIndex)\r\n            }\r\n            setProject({...project, grid: newGrid} as Project);\r\n        }\r\n    }\r\n\r\n    function changeColorHandler(color: string) {\r\n        setProject({...project, color} as Project)\r\n    }\r\n\r\n    function stepHandler(step: number) {\r\n\r\n    }\r\n\r\n    const newCell = useCallback((symbol: SymbolType, clickDirection: Direction, cell: Cell): Cell => {\r\n        const keys = Object.keys(paths[stitchType]);\r\n        const regexp = /.{1,2}/g;\r\n        let directions: any = [];\r\n        switch (stitchType as StitchType) {\r\n            case 'vx':\r\n                directions = clickDirection.indexOf('l') !== -1 ? keys[0].match(regexp) : keys[1].match(regexp);\r\n                break;\r\n            case 'hx':\r\n                directions = clickDirection.indexOf('t') !== -1 ? keys[0].match(regexp) : keys[1].match(regexp);\r\n                break;\r\n            case 'sx':\r\n            case 'qx':\r\n                directions = [clickDirection];\r\n                break;\r\n            case 'qx3':\r\n                const foundKey = keys.find(key => (key.match(regexp) as any)[1] === clickDirection) as string;\r\n                directions = foundKey.match(regexp);\r\n                break;\r\n            case'/':\r\n            case'\\\\':\r\n            case'x':\r\n                directions = keys[0].match(regexp)\r\n                break;\r\n        }\r\n        const newStitch: Stitch = {symbol, type: stitchType, directions};\r\n        return [...cell.filter(stitch => {\r\n            return !stitch.directions.filter(direction => directions.find((newDirection: Direction) => newDirection === direction)).length\r\n        }), newStitch];\r\n    }, [stitchType])\r\n\r\n    useEffect(() => {\r\n        projectService.get(id).then(res => {\r\n            if (res) {\r\n                setProject(res)\r\n            } else {\r\n                history.push('/');\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (project) {\r\n            projectService.save(project).then(() => console.log('saved'));\r\n            setSteps([...steps.slice(0, step), {...project} as Project]);\r\n            setStep(steps.length);\r\n        }\r\n    }, [project])\r\n\r\n    if (!project) return null;\r\n\r\n    return (\r\n        <div className=\"editor\">\r\n            <TopPanel project={project}\r\n                      onChangePicture={picture => setProject({...project, picture} as Project)}\r\n                      onChangeColor={changeColorHandler}/>\r\n            <div className=\"mainArea\">\r\n                <LeftPanel palette={project.palette}\r\n                           onChange={palette => setProject({...project, palette} as Project)}\r\n                           onDelete={deleteThreadHandler}\r\n                />\r\n                <Canvas project={project} onCellClick={cellClickHandler}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {PaletteType} from \"../../types/paletteType\";\r\nimport {SymbolType} from \"../../types/symbol\";\r\n\r\nexport interface StitchTableProps {\r\n    symbols: SymbolType[]\r\n    palette: PaletteType\r\n}\r\n\r\nexport const StitchTable: FunctionComponent<StitchTableProps> = ({symbols, palette}) => {\r\n\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead>\r\n            <tr>\r\n                <th>Sym</th>\r\n                <th>Vendor</th>\r\n                <th>Number</th>\r\n                <th>Threads</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {symbols.map((symbol, index) => {\r\n                const thread = palette[symbol as any];\r\n                return (<tr key={index}>\r\n                    <td>{symbol}</td>\r\n                    <td>{thread.vendor}</td>\r\n                    <td>{thread.name}</td>\r\n                    <td>2</td>\r\n                </tr>);\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport './Print.scss'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {projectService} from \"../../services/dataService\";\r\nimport {Project} from \"../../types/project\";\r\nimport {Cell} from \"../../types/cell\";\r\nimport {StitchTable} from \"../StitchTable/StitchTable\";\r\nimport {Zoom} from \"../../types/zoom\";\r\nimport {Canvas, CELL_SIZE} from \"../Canvas/Canvas\";\r\nimport {Child} from \"../Child\";\r\n\r\nexport const Print = () => {\r\n    const {id} = useParams();\r\n    const [project, setProject] = useState<Project>();\r\n    const [xStitches, backStitches, halfStitch] = useMemo(() => {\r\n        const xStitches: Set<string> = new Set(),\r\n            backStitches: Set<string> = new Set(),\r\n            halfStitch: Set<string> = new Set();\r\n        if (project) {\r\n            Object.keys(project.grid).forEach((rowIndex) => {\r\n                Object.keys(project.grid[rowIndex as any]).forEach(cellIndex => {\r\n                    const cell = project.grid[rowIndex as any][cellIndex as any] as Cell;\r\n                    cell.forEach(stitch => {\r\n                        if (['\\\\', '/'].indexOf(stitch.type) !== -1) {\r\n                            halfStitch.add(stitch.symbol);\r\n                        } else {\r\n                            xStitches.add(stitch.symbol);\r\n                        }\r\n                    })\r\n                })\r\n            });\r\n        }\r\n        return [Array.from(xStitches), Array.from(backStitches), Array.from(halfStitch)];\r\n    }, [project]);\r\n    const [range, setRange] = useState({x: 40, y: 50});\r\n    const [xorNum, setXorNum] = useState(4);\r\n    const pageRef = useRef(document.createElement('div'));\r\n\r\n    useEffect(() => {\r\n        projectService.get(id).then(setProject);\r\n    }, [])\r\n\r\n    const parts: { x: number, y: number }[] = useMemo(() => {\r\n        if (!project) return [];\r\n        return Array(Math.ceil(project.height / (range.y - xorNum))).fill(null)\r\n            .reduce((prev, _, rowIndex) => prev.concat(Array(Math.ceil(project.width / (range.x - xorNum))).fill(null)\r\n                .map((_, colIndex) => ({x: colIndex * (range.x - xorNum), y: rowIndex * (range.y - xorNum)}))), [])\r\n    }, [project]);\r\n\r\n    const staticZoom: Zoom = {\r\n        scrollX: 0,\r\n        scrollY: 0,\r\n        scale: Math.min(\r\n            Math.floor(pageRef.current.clientWidth / CELL_SIZE / (range.x + xorNum)),\r\n            Math.floor(pageRef.current.clientHeight / CELL_SIZE / (range.y + xorNum)),\r\n        )\r\n    }\r\n\r\n    console.log(staticZoom.scale, pageRef.current.offsetHeight);\r\n\r\n    return (\r\n        <div className=\"print\">\r\n            <div className=\"paper\">\r\n                <div className=\"page\">\r\n                    <div ref={pageRef}>\r\n                        {project &&\r\n                        <Child>\r\n                            <h3>X stitches</h3>\r\n                            <StitchTable palette={project.palette} symbols={xStitches}/>\r\n                            {!!backStitches.length && [\r\n                                <h3>Back stitches</h3>,\r\n                                <StitchTable palette={project.palette} symbols={backStitches}/>\r\n                            ]}\r\n                            {!!halfStitch.length && [\r\n                                <h3>Half stitches</h3>,\r\n                                <StitchTable palette={project.palette} symbols={halfStitch}/>\r\n                            ]}\r\n                        </Child>}\r\n                    </div>\r\n                </div>\r\n                {project && parts.map((part, index) =>\r\n                    <div key={index} className=\"page\">\r\n                        <div className={'canvas'} style={{\r\n                            width: staticZoom.scale * (range.x + xorNum) * CELL_SIZE,\r\n                            height: staticZoom.scale * (range.y + xorNum) * CELL_SIZE,\r\n                        }}>\r\n                            <Canvas project={project} staticZoom={{\r\n                                ...staticZoom,\r\n                                scrollX: part.x * CELL_SIZE * staticZoom.scale,\r\n                                scrollY: part.y * CELL_SIZE * staticZoom.scale,\r\n                            }}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\n\r\nexport const Test = () => {\r\n    const ref = useRef<HTMLDivElement>(document.createElement('div'));\r\n    let clicked = false;\r\n\r\n    function mouseDownHandler(res: boolean) {\r\n        clicked = res;\r\n    }\r\n\r\n    function mouseMoveHandler() {\r\n        console.log(clicked);\r\n        if (ref.current) {\r\n            ref.current.innerHTML = clicked + '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{width: '100vw', height: '100vh'}}\r\n            onMouseDown={e => mouseDownHandler(true)}\r\n            onMouseMove={mouseMoveHandler}\r\n            onMouseUp={e => mouseDownHandler(false)}>\r\n            {clicked.toString()}\r\n            <div ref={ref}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route, HashRouter\r\n} from \"react-router-dom\";\r\nimport {ProjectEdit} from \"./ProjectEdit/ProjectEdit\";\r\nimport {Home} from \"./Home/Home\";\r\nimport {Editor} from \"./Editor/Editor\";\r\nimport {Store} from \"./Store\";\r\nimport {Print} from \"./Print/Print\";\r\nimport {Test} from \"./Test/Test\";\r\n\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Store>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path=\"/edit/:id?\">\r\n                        <ProjectEdit/>\r\n                    </Route>\r\n                    <Route path=\"/draw/:id\">\r\n                        <Editor/>\r\n                    </Route>\r\n                    <Route path=\"/print/:id\">\r\n                        <Print/>\r\n                    </Route>\r\n                    <Route path=\"/test\">\r\n                        <Test/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </Store>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/half.048357d9.svg\";"],"sourceRoot":""}