{"version":3,"sources":["assets/qx3.svg","assets/sx.svg","assets/x.svg","assets/qx.svg","assets/vx.svg","assets/hx.svg","types/project.ts","types/entity.ts","services/dbService.ts","services/dataService.ts","components/ProjectEdit/ProjectEdit.tsx","components/Home/Home.tsx","types/symbol.ts","types/viewType.ts","types/stitch.ts","components/reducer.ts","components/Canvas/Canvas.tsx","services/localStorageService.ts","components/Store.tsx","types/zoom.ts","services/colorService.ts","components/Scroll/Scroll.tsx","components/Child.tsx","types/paths.ts","components/Panel/Panel.tsx","components/Palette/Palette.tsx","types/thread.ts","components/PaleteEdit/PaletteEdit.tsx","components/RightPanel/LeftPanel.tsx","components/ViewToolBar/ViewToolBar.tsx","types/backColors.ts","components/ImageEdit/ImageEdit.tsx","components/BackPanel/BackToolBar.tsx","components/TopPanel/TopPanel.tsx","components/Editor/Editor.tsx","components/StitchTable/StitchTable.tsx","components/Print/Print.tsx","components/Test/Test.tsx","components/App.tsx","index.tsx","assets/half.svg"],"names":["module","exports","Project","name","grid","palette","height","width","color","picture","id","createdAt","Date","getTime","updatedAt","object","Object","keys","forEach","key","this","DbService","schema","version","idbFactory","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","Error","Promise","resolve","reject","request","open","onerror","onsuccess","event","target","result","onupgradeneeded","console","log","db","table","createObjectStore","keyPath","transaction","objectStore","tables","projectService","className","dbService","tableNames","map","cls","store","get","entity","uuid","put","delete","getAll","then","res","import","fn","ProjectEdit","useParams","useState","project","setProject","history","useHistory","onChangeHandler","prop","value","useEffect","onChange","e","type","parseInt","onClick","save","push","to","Home","projects","setProjects","list","createdAtDate","updatedAtDate","toLocaleString","symbolTypes","viewTypes","stitchTypes","actionTypes","initialState","zoom","scale","scrollX","scrollY","stitchType","symbol","view","mainReducer","state","action","mouseButton","localStorageService","prefix","localStorage","getItem","setItem","_get","removeItem","defaultValue","obj","JSON","parse","hasOwnProperty","_put","stringify","time","now","has","StoreContext","React","createContext","DispatchContext","Store","children","useReducer","dispatch","actionList","useMemo","setZoom","setSymbol","setStitchType","setView","Provider","zoomSettings","colorService","hex","bw","indexOf","slice","length","r","g","b","toString","padZero","str","getHexContrast","strRgbToHex","match","exec","rgbToHex","len","zeros","Array","join","c","componentToHex","Scroll","horizontal","size","onScroll","scroll","ref","useRef","document","createElement","overflow","current","style","Child","paths","path","Canvas","wheelTimeOut","onCellClick","useContext","setSize","zoomed","useCallback","number","Math","floor","scrolledX","scrolledY","cellSize","fontSize","aidaImgEl","querySelector","counterImgEl","image","data","Image","src","resize","parent","parentElement","offsetHeight","offsetWidth","emitCell","pageX","pageY","undefined","refRect","getBoundingClientRect","cellX","left","rowY","top","cellIndex","rowIndex","direction","drawCell","ctx","cell","zX","zY","stitch","contrastColor","strRgbContrast","fillStyle","fill","x","y","arrPath","directions","el","index","Path2D","get2DPath","symbolPos","shadowBlur","font","textAlign","fillText","drawSymbol","drawAll","getContext","clearRect","fillRect","i","j","drawImage","drawBackGround","globalAlpha","opacity","sWidth","sHeight","drawPicture","colIndex","drawCells","strokeStyle","strokeStyleBold","lineWidth","beginPath","moveTo","lineTo","stroke","drawGrid","scrollHandler","currentTarget","mouseDownHandler","preventDefault","button","addEventListener","removeEventListener","onWheel","clearTimeout","shiftKey","altKey","deltaY","setTimeout","delta","newScale","min","max","maxScrollX","newScrollX","maxScrollY","newScrollY","onContextMenu","onMouseMove","onMouseDown","onMouseUp","Panel","vertical","border","Palette","onDoubleClick","selectedSymbol","sort","a","threadA","threadB","thread","borderColor","backgroundColor","selected","title","vendor","vendors","anchor","t","dmc","gamma","maderia","PaletteEdit","onSave","onCancel","onDelete","setVendor","search","setSearch","selectedThread","setThread","threads","filter","placeholder","confirm","LeftPanel","modalOpened","setModalOpened","editSymbol","setEditSymbol","Modal","show","onHide","Body","ViewToolBar","currentView","ButtonGroup","viewType","Button","active","backColors","ImageEdit","setPicture","lock","setLock","aspect","maxSize","changeSize","newSize","Form","Group","File","accept","label","file","files","reader","FileReader","onload","readAsDataURL","Check","checked","Label","Control","BackToolBar","onChangeColor","onChangePicture","colorRef","colorCustomRef","modal","setModal","Overlay","placement","rootClose","props","colors","disableAlpha","onChangeComplete","TopPanel","qx3","sx","qx","vx","hx","half","transform","component","Editor","deleteCell","newCell","clickDirection","regexp","foundKey","find","newStitch","newDirection","newPalette","contextMenu","newGrid","StitchTable","symbols","Print","xStitches","Set","backStitches","halfStitch","add","from","Test","clicked","innerHTML","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48673c7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/qx3.8a80f529.svg\";","module.exports = __webpack_public_path__ + \"static/media/sx.efdbea92.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.4fd9859e.svg\";","module.exports = __webpack_public_path__ + \"static/media/qx.cfab1280.svg\";","module.exports = __webpack_public_path__ + \"static/media/vx.a8c2799b.svg\";","module.exports = __webpack_public_path__ + \"static/media/hx.184f0745.svg\";","import {Entity} from \"./entity\";\r\nimport {PaletteType} from \"./paletteType\";\r\nimport {Cell} from \"./cell\";\r\n\r\nexport class Project extends Entity {\r\n    name: string = 'new Project';\r\n    grid: GridType = {};\r\n    palette: PaletteType = {};\r\n    height: number = 100;\r\n    width: number = 100;\r\n    color: string = '#ffffff';\r\n    picture?: Picture;\r\n}\r\n\r\nexport interface Picture {\r\n    opacity: number;\r\n    left: number,\r\n    top: number,\r\n    height: number,\r\n    sHeight: number,\r\n    width: number,\r\n    sWidth: number,\r\n    data?: string;\r\n}\r\n\r\n\r\nexport type GridType = { [key: number]: { [key: number]: Cell } };\r\n","export class Entity {\r\n    id?: string;\r\n    createdAt: number = new Date().getTime();\r\n    updatedAt: number = new Date().getTime();\r\n\r\n    import(object: any) {\r\n        Object.keys(object).forEach(key => {\r\n            // @ts-ignore\r\n            this[key] = object[key];\r\n        })\r\n        return this;\r\n    }\r\n}\r\n","export class DbService {\r\n\r\n    idbFactory: IDBFactory;\r\n\r\n    constructor(private name: string, private schema: string[], private version: number) {\r\n        // @ts-ignore\r\n        this.idbFactory = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        if (!this.idbFactory) {\r\n            throw  new Error(\"Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.\");\r\n        }\r\n    }\r\n\r\n    open(): Promise<IDBDatabase> {\r\n        return new Promise((resolve, reject) => {\r\n            const request = this.idbFactory.open(this.name, this.version);\r\n            request.onerror = () => new Error('You need to allow database');\r\n            request.onsuccess = (event: any) => {\r\n                resolve(event.target.result);\r\n            }\r\n            request.onupgradeneeded = (event: any) => {\r\n                console.log('onupgradeneeded');\r\n                const db = event.target.result;\r\n                this.schema.forEach(table => {\r\n                    db.createObjectStore(table, {keyPath: 'id'})\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    async store(name: string): Promise<IDBObjectStore> {\r\n        const db = await this.open();\r\n        return db.transaction(name, 'readwrite').objectStore(name);\r\n    }\r\n}\r\n","import {DbService} from \"./dbService\";\r\nimport {Project} from \"../types/project\";\r\nimport {Entity} from \"../types/entity\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nconst tables = [\r\n    Project\r\n]\r\n\r\nconst DB_VERSION = 2;\r\nconst DB_NAME = 'stitch';\r\n\r\nexport class DataService<T extends Entity> {\r\n\r\n    dbService: DbService;\r\n\r\n    constructor(private className: any) {\r\n        const tableNames = tables.map(cls => cls.name);\r\n        this.dbService = new DbService(DB_NAME, tableNames, DB_VERSION);\r\n    }\r\n\r\n    async get(id: string): Promise<T> {\r\n        return this.request<T>((store) => store.get(id))\r\n    }\r\n\r\n    async save(entity: T): Promise<string> {\r\n        if (!entity.id) {\r\n            entity.id = uuid();\r\n        }\r\n        entity.updatedAt = new Date().getTime()\r\n        return this.request((store) => store.put(entity))\r\n    }\r\n\r\n    async delete(entity: T): Promise<T> {\r\n        return this.request((store) => store.delete(entity.id as string))\r\n    }\r\n\r\n    async list(): Promise<T[]> {\r\n        return this.request<T[]>((store) => store.getAll()).then(res => res.map(entity => {\r\n            return (new this.className()).import(entity)\r\n        }))\r\n    }\r\n\r\n    async request<T = void>(fn: (store: IDBObjectStore) => IDBRequest): Promise<T> {\r\n        const store = await this.dbService.store(this.className.name)\r\n        return new Promise(res => fn(store).onsuccess = (event: any) => res(event.target.result))\r\n    }\r\n}\r\n\r\nexport const projectService = new DataService<Project>(Project)\r\n","import React, {FunctionComponent, useEffect, useState} from 'react';\r\nimport {useParams, useHistory, Link} from 'react-router-dom';\r\nimport {Project} from \"../../types/project\";\r\nimport {projectService} from \"../../services/dataService\";\r\n\r\nexport const ProjectEdit: FunctionComponent = () => {\r\n    const {id} = useParams();\r\n    const [project, setProject] = useState<Project>(new Project());\r\n    const history = useHistory();\r\n\r\n    function onChangeHandler(prop: string, value: any) {\r\n        setProject({...project, [prop]: value} as Project)\r\n    }\r\n\r\n\r\n    function save() {\r\n        projectService.save(project).then(id => {\r\n            history.push(`/draw/${id}`)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            projectService.get(id).then(res => setProject(res));\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label>Project</label>\r\n                <input value={project.name} onChange={e => onChangeHandler('name', e.target.value)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Height (stitches)</label>\r\n                <input type=\"number\" value={project.width}\r\n                       onChange={e => onChangeHandler('width', parseInt(e.target.value))}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Height (stitches)</label>\r\n                <input type=\"number\" value={project.height}\r\n                       onChange={e => onChangeHandler('height', parseInt(e.target.value))}/>\r\n            </div>\r\n\r\n            <button onClick={e => save()}>{project.id ? 'Save' : 'Create'}</button>\r\n            <Link to={'/' + (project.id ? `draw/${project.id}` : '')}>Cancel</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {projectService} from \"../../services/dataService\";\r\nimport {Project} from \"../../types/project\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function Home() {\r\n\r\n    const [projects, setProjects] = useState<Project[]>([]);\r\n\r\n    useEffect(() => {\r\n        projectService.list().then(setProjects)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Link to={'/edit'}>new</Link>\r\n            Recent projects:\r\n            <ul>\r\n                {projects.map((project,key) => {\r\n                    const createdAtDate = new Date(project.createdAt);\r\n                    const updatedAtDate = new Date(project.updatedAt);\r\n                    return (<Link to={`/draw/${project.id}`} key={key}>\r\n                        <li>{project.name} createdAt: {createdAtDate.toLocaleString()} | updatedAt: {updatedAtDate.toLocaleString()}</li>\r\n                    </Link>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","export const symbolTypes = [\r\n    '♥', '♣', '♠', '○',\r\n    '◙', '☼', '▲', '▼', '#',\r\n    '$', '●', '■', '◊', '□',\r\n    '♦', '♪', '☻', '♫', 'ↄ',\r\n    '¤', '©', '®', '&', '€',\r\n    '℗', '₿', 'Ω', '∆', '∑',\r\n    '₽', '≈', '╦', '╩', '╬',\r\n    '◘', '◄', '►', 'Ɐ', 'Ꝋ',\r\n    'Ꞝ', 'Ꞷ', 'ⱥ', '∞', '∂',\r\n    '₮', '₭', '₾', '≠', '≡'\r\n]\r\n\r\nexport type SymbolType = typeof symbolTypes[number]\r\n","export const viewTypes = ['aida', 'count', 'grid', 'none'];\r\n\r\nexport type ViewType = typeof viewTypes[number];\r\n","import {SymbolType} from \"./symbol\";\r\n\r\nexport interface Stitch {\r\n    directions: Direction[];\r\n    type: StitchType;\r\n    symbol: SymbolType;\r\n}\r\n\r\nexport const stitchTypes = ['x', 'vx', 'hx', 'sx', 'qx', 'qx3', '\\\\', '/']\r\n\r\nexport type StitchType = typeof stitchTypes[number]\r\n\r\nexport type Direction = 'tr' | 'tl' | 'br' | 'bl';\r\n","import {StoreType} from \"./Store\";\r\nimport {symbolTypes} from \"../types/symbol\";\r\nimport {viewTypes} from \"../types/viewType\";\r\nimport {stitchTypes} from \"../types/stitch\";\r\n\r\nexport const actionTypes = {\r\n    SET_ZOOM: 'SET_ZOOM',\r\n    SET_SYMBOL: 'SET_SYMBOL',\r\n    SET_STITCH_TYPE: 'SET_STITCH_TYPE',\r\n    SET_VIEW: 'SET_VIEW',\r\n};\r\n\r\nexport const initialState: StoreType = {\r\n    zoom: {scale: 1, scrollX: 0, scrollY: 0},\r\n    stitchType: stitchTypes[0],\r\n    symbol: symbolTypes[0],\r\n    view: viewTypes[0]\r\n};\r\n\r\nexport function mainReducer(state: StoreType, action: { type: string, value: any }) {\r\n    switch (action.type) {\r\n        case actionTypes.SET_ZOOM:\r\n            return {...state, zoom: action.value};\r\n        case actionTypes.SET_SYMBOL:\r\n            return {...state, symbol: action.value};\r\n        case actionTypes.SET_STITCH_TYPE:\r\n            return {...state, stitchType: action.value};\r\n        case actionTypes.SET_VIEW:\r\n            return {...state, view: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, {\r\n    FunctionComponent,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from \"react\";\r\nimport './Canvas.scss';\r\nimport {Cell} from \"../../types/cell\";\r\nimport {DispatchContext, StoreContext, StoreType} from \"../Store\";\r\nimport {Direction, Stitch, StitchType} from \"../../types/stitch\";\r\nimport {zoomSettings} from \"../../types/zoom\";\r\nimport {colorService} from \"../../services/colorService\";\r\nimport {Project} from \"../../types/project\";\r\nimport {Scroll} from \"../Scroll/Scroll\";\r\nimport {Child} from \"../Child\";\r\nimport {paths} from \"../../types/paths\";\r\n\r\nexport interface CanvasPropsType {\r\n    project: Project;\r\n    onCellClick?: (rowIndex: number, cellIndex: number, direction: Direction, contextMenu: boolean) => void\r\n}\r\n\r\nexport const CELL_SIZE = 4;\r\nlet mouseButton: any;\r\n\r\nexport const Canvas: FunctionComponent<CanvasPropsType> = ({\r\n                                                               project,\r\n                                                               onCellClick\r\n                                                           }) => {\r\n    const {zoom, view} = useContext(StoreContext);\r\n    const {setZoom} = useContext(DispatchContext);\r\n    const [size, setSize] = useState<{ height: number, width: number }>({height: 0, width: 0});\r\n    const ref = useRef<HTMLCanvasElement>(document.createElement('canvas'));\r\n\r\n    const zoomed = useCallback((number: number) => Math.floor(number * zoom.scale), [zoom.scale]);\r\n    const scrolledX = useCallback((number: number) => Math.floor(number - zoom.scrollX), [zoom.scrollX]);\r\n    const scrolledY = useCallback((number: number) => Math.floor(number - zoom.scrollY), [zoom.scrollY]);\r\n\r\n    const cellSize = useMemo(() => zoomed(CELL_SIZE), [zoomed]);\r\n    const fontSize = cellSize / 2;\r\n    const {grid, palette} = project;\r\n\r\n    const aidaImgEl = document.querySelector('#aida') as HTMLImageElement;\r\n    const counterImgEl = document.querySelector('#counter') as HTMLImageElement;\r\n    const image = useMemo(() => {\r\n        if (project.picture && project.picture.data) {\r\n            const image = new Image();\r\n            image.src = project.picture.data;\r\n            return image;\r\n        }\r\n        return null;\r\n    }, [project.picture])\r\n\r\n    let wheelTimeOut: any;\r\n\r\n    function resize() {\r\n        const parent = ref.current.parentElement;\r\n        if (parent) {\r\n            setSize({height: parent.offsetHeight, width: parent.offsetWidth})\r\n        }\r\n    }\r\n\r\n    function emitCell(pageX: number, pageY: number) {\r\n        if (mouseButton === undefined) return;\r\n        const refRect = ref.current.getBoundingClientRect();\r\n        const cellX = (pageX - refRect.left + zoom.scrollX) / cellSize\r\n        const rowY = (pageY - refRect.top + zoom.scrollY) / cellSize\r\n        const cellIndex = Math.floor(cellX);\r\n        const rowIndex = Math.floor(rowY);\r\n        const direction = (rowY - rowIndex > .5 ? 'b' : 't') + (cellX - cellIndex > .5 ? 'r' : 'l') as Direction;\r\n        if (rowIndex <= project.height && cellIndex <= project.width) {\r\n            onCellClick && onCellClick(rowIndex, cellIndex, direction, mouseButton === 2);\r\n        }\r\n    }\r\n\r\n    function drawCell(ctx: CanvasRenderingContext2D, cell: Cell, cellIndex: number, rowIndex: number) {\r\n        const zX = scrolledX(cellIndex * cellSize);\r\n        const zY = scrolledY(rowIndex * cellSize);\r\n        if (zX > size.width || zY > size.height) {\r\n            return;\r\n        }\r\n        cell.forEach(stitch => {\r\n            const color = palette[stitch.symbol].color;\r\n            const contrastColor = colorService.strRgbContrast(color);\r\n            ctx.fillStyle = color;\r\n            ctx.fill(get2DPath(zX, zY, stitch));\r\n            const symbolPosArr = paths[stitch.type][stitch.directions.join('')].symbol;\r\n            symbolPosArr.forEach(symbolPos => {\r\n                drawSymbol(ctx, zX + cellSize * symbolPos[0], zY + cellSize * symbolPos[1], contrastColor, stitch.symbol);\r\n            })\r\n        })\r\n    }\r\n\r\n    function drawSymbol(ctx: CanvasRenderingContext2D, x: number, y: number, color: string, symbol: string) {\r\n        ctx.fillStyle = color;\r\n        ctx.shadowBlur = 0;\r\n        ctx.font = `${fontSize}px Arial`;\r\n        ctx.textAlign = \"center\"\r\n        ctx.fillText(symbol, x, y)\r\n    }\r\n\r\n    function get2DPath(x: number, y: number, stitch: Stitch) {\r\n        const arrPath = paths[stitch.type][stitch.directions.join('')].path;\r\n        const str = [...arrPath, arrPath[0]].map((el, index) => {\r\n            return `${index === 0 ? 'm' : 'L'}${x + el[0] * cellSize},${y + el[1] * cellSize}`;\r\n        }).join('') + 'z';\r\n        return new Path2D(str);\r\n    }\r\n\r\n    function drawCells(ctx: CanvasRenderingContext2D) {\r\n        Object.keys(grid).forEach((rowIndex: any) => {\r\n            Object.keys(grid[rowIndex]).forEach((colIndex: any) => {\r\n                const cell = grid[rowIndex][colIndex];\r\n                drawCell(ctx, cell, colIndex, rowIndex);\r\n            })\r\n        })\r\n    }\r\n\r\n    function drawBackGround(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(scrolledX(0), scrolledY(0), project.width * cellSize, project.height * cellSize);\r\n        if (view === 'aida' || view === 'count') {\r\n            let i = 0;\r\n            while (i < project.height) {\r\n                let j = 0;\r\n                while (j < project.width) {\r\n                    ctx.drawImage(view === 'aida' ? aidaImgEl : counterImgEl,\r\n                        scrolledX(j * cellSize),\r\n                        scrolledY(i * cellSize),\r\n                        cellSize,\r\n                        cellSize)\r\n                    j++;\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        ctx.fillStyle = `${project.color}88`;\r\n        ctx.fillRect(scrolledX(0), scrolledY(0), project.width * cellSize, project.height * cellSize);\r\n    }\r\n\r\n    function drawGrid(ctx: CanvasRenderingContext2D) {\r\n        const gridSize = 10;\r\n        let i = 0;\r\n        let j = 0;\r\n        const strokeStyle = `rgba(0,0,0,${(zoom.scale - zoomSettings.min) / 2})`;\r\n        const strokeStyleBold = `rgba(0,0,0,${zoom.scale / 2})`;\r\n        while (i <= project.height) {\r\n            ctx.lineWidth = zoom.scale - zoomSettings.min;\r\n            ctx.lineWidth = i % gridSize ? 1 : 2;\r\n            ctx.strokeStyle = i % gridSize ? strokeStyle : strokeStyleBold;\r\n            ctx.beginPath();\r\n            ctx.moveTo(scrolledX(0), scrolledY(i * cellSize));\r\n            ctx.lineTo(scrolledX(project.width * cellSize), scrolledY(i * cellSize));\r\n            ctx.stroke();\r\n            i++;\r\n        }\r\n        while (j <= project.width) {\r\n            ctx.lineWidth = j % gridSize ? 1 : 2;\r\n            ctx.strokeStyle = j % gridSize ? strokeStyle : strokeStyleBold;\r\n            ctx.beginPath();\r\n            ctx.moveTo(scrolledX(j * cellSize), scrolledY(0));\r\n            ctx.lineTo(scrolledX(j * cellSize), scrolledY(project.height * cellSize));\r\n            ctx.stroke();\r\n            j++;\r\n        }\r\n    }\r\n\r\n    function drawPicture(ctx: CanvasRenderingContext2D) {\r\n        const {picture} = project;\r\n        if (image && picture) {\r\n            ctx.globalAlpha = picture.opacity;\r\n            ctx.drawImage(\r\n                image,\r\n                scrolledX(picture.left * cellSize),\r\n                scrolledY(picture.top * cellSize),\r\n                picture.sWidth * cellSize,\r\n                picture.sHeight * cellSize\r\n            );\r\n            ctx.globalAlpha = 1;\r\n        }\r\n    }\r\n\r\n    function drawAll() {\r\n        const ctx = getCtx();\r\n        ctx.clearRect(0, 0, size.width, size.height);\r\n        drawBackGround(ctx);\r\n        drawPicture(ctx);\r\n        drawCells(ctx);\r\n        if (view === 'grid') drawGrid(ctx);\r\n    }\r\n\r\n    function getCtx(): CanvasRenderingContext2D {\r\n        // @ts-ignore\r\n        return ref.current.getContext('2d');\r\n    }\r\n\r\n    function wheel(e: React.WheelEvent<HTMLCanvasElement>) {\r\n        clearTimeout(wheelTimeOut);\r\n        const {shiftKey, altKey, deltaY} = e;\r\n        wheelTimeOut = setTimeout(() => {\r\n            const delta = deltaY < 0 ? -150 : 150;\r\n            if (altKey) {\r\n                const {scale} = zoom;\r\n                const newScale = (delta < 0 ? Math.min(zoomSettings.max, scale * zoomSettings.speed) : Math.max(zoomSettings.min, scale * (1 / zoomSettings.speed)));\r\n                if (newScale !== scale) {\r\n                    setZoom({\r\n                        scrollX: 0,\r\n                        scrollY: 0,\r\n                        scale: newScale,\r\n                    });\r\n                }\r\n            } else {\r\n                if (project) {\r\n                    if (shiftKey) {\r\n                        if (project.width * cellSize > size.width) {\r\n                            const maxScrollX = project.width * cellSize - size.width;\r\n                            const newScrollX = zoom.scrollX + delta;\r\n                            setZoom({\r\n                                ...zoom,\r\n                                scrollX: 0 > newScrollX ? 0 : newScrollX >= maxScrollX ? maxScrollX : newScrollX\r\n                            })\r\n                        }\r\n                    } else {\r\n                        if (project.height * cellSize > size.height) {\r\n                            const maxScrollY = project.height * cellSize - size.height;\r\n                            const newScrollY = zoom.scrollY + delta;\r\n                            setZoom({\r\n                                ...zoom,\r\n                                scrollY: 0 > newScrollY ? 0 : newScrollY >= maxScrollY ? maxScrollY : newScrollY\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }, 30)\r\n    }\r\n\r\n    function scrollHandler(x = true, event: React.UIEvent<HTMLDivElement>) {\r\n        const scroll = event.currentTarget[x ? 'scrollLeft' : 'scrollTop'];\r\n        setZoom({...zoom, [x ? 'scrollX' : 'scrollY']: scroll});\r\n    }\r\n\r\n    useEffect(() => {\r\n        resize();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        drawAll();\r\n    }, [project, size, zoom, view]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resize);\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n        }\r\n    }, [project]);\r\n\r\n    function mouseDownHandler(event: React.MouseEvent) {\r\n        event.preventDefault();\r\n        if (event.type === 'mousedown') {\r\n            mouseButton = event.button;\r\n            emitCell(event.pageX, event.pageY);\r\n        } else {\r\n            mouseButton = undefined;\r\n        }\r\n    }\r\n\r\n    function mouseMoveHandler(event: React.MouseEvent) {\r\n        emitCell(event.pageX, event.pageY);\r\n    }\r\n\r\n    return (\r\n        <Child>\r\n            <Scroll scroll={zoom.scrollY} onScroll={e => scrollHandler(false, e)}\r\n                    size={cellSize * project.height - size.height}/>\r\n            <div className=\"scrollContainer\">\r\n                <div className=\"canvasContainer\">\r\n                    <canvas onWheel={wheel}\r\n                            onContextMenu={e => e.preventDefault()}\r\n                            onMouseMove={mouseMoveHandler}\r\n                            onMouseDown={mouseDownHandler}\r\n                            onMouseUp={mouseDownHandler}\r\n                            height={size.height}\r\n                            width={size.width}\r\n                            ref={ref}\r\n                            className=\"Canvas\"/>\r\n                </div>\r\n                <Scroll scroll={zoom.scrollX} onScroll={e => scrollHandler(true, e)}\r\n                        size={cellSize * project.width - size.width}\r\n                        horizontal={true}/>\r\n            </div>\r\n        </Child>\r\n    )\r\n}\r\n","export default class LocalStorageService {\n    prefix = '';\n\n    constructor(prefix = '') {\n        this.prefix = prefix + '_'\n    }\n\n    _get(name: string) {\n        return localStorage.getItem(this.prefix + name) as any\n    }\n\n    _put(name: string, value: any) {\n        localStorage.setItem(this.prefix + name, value);\n    }\n\n    has(name: string) {\n        return this._get(name) !== null\n    }\n\n    remove(name: string) {\n        localStorage.removeItem(this.prefix + name);\n    }\n\n    get(name: string, defaultValue?: any) {\n        let obj = JSON.parse(this._get(name));\n        return (obj && obj.hasOwnProperty('value')) ? obj.value : defaultValue;\n    }\n\n    put(name: string, value: any) {\n        this._put(name, JSON.stringify({time: Date.now(), value: value}));\n    }\n\n    time(name: string) {\n        let obj = JSON.parse(this._get(name));\n        return obj.time;\n    }\n\n    fresh(name: string, time: Date) {\n        return this.has(name) && this.time(name) > time\n    }\n}\n\nexport const localStorageService = new LocalStorageService('stich');\n","import React, {useEffect} from \"react\";\r\nimport {Zoom, zoomSettings} from \"../types/zoom\";\r\nimport {actionTypes, initialState, mainReducer} from \"./reducer\";\r\nimport {StitchType, stitchTypes} from \"../types/stitch\";\r\nimport {localStorageService} from \"../services/localStorageService\";\r\nimport {SymbolType, symbolTypes} from \"../types/symbol\";\r\nimport {ViewType} from \"../types/viewType\";\r\n\r\nexport interface StoreType {\r\n    zoom: Zoom,\r\n    stitchType: StitchType\r\n    symbol: SymbolType\r\n    view: ViewType\r\n}\r\n\r\nexport interface DispatchType {\r\n    setZoom: (value: Zoom) => void,\r\n    setStitchType: (value: StitchType) => void,\r\n    setSymbol: (value: SymbolType) => void,\r\n    setView: (value: ViewType) => void,\r\n}\r\n\r\n// @ts-ignore\r\nexport const StoreContext = React.createContext<StoreType>();\r\n// @ts-ignore\r\nexport const DispatchContext = React.createContext<DispatchType>();\r\n\r\nexport const Store = ({children}: any) => {\r\n    const [state, dispatch] = React.useReducer(mainReducer, {\r\n        ...initialState,\r\n        zoom: localStorageService.get('zoom', initialState.zoom),\r\n        view: localStorageService.get('view', initialState.view),\r\n        stitchType: localStorageService.get('stitchType',initialState.stitchType),\r\n        symbol: localStorageService.get('symbol', initialState.symbol),\r\n    });\r\n    const actionList = React.useMemo(() => ({\r\n        setZoom: (value: Zoom) => dispatch({type: actionTypes.SET_ZOOM, value}),\r\n        setSymbol: (value: StitchType) => dispatch({type: actionTypes.SET_SYMBOL, value}),\r\n        setStitchType: (value: StitchType) => dispatch({type: actionTypes.SET_STITCH_TYPE, value}),\r\n        setView: (value: ViewType) => dispatch({type: actionTypes.SET_VIEW, value}),\r\n    }), [dispatch]);\r\n\r\n    useEffect(() => {\r\n        localStorageService.put('zoom', state.zoom);\r\n        localStorageService.put('view', state.view);\r\n        localStorageService.put('stitchType', state.stitchType);\r\n        localStorageService.put('symbol', state.symbol);\r\n    }, [state])\r\n\r\n    return (\r\n        <DispatchContext.Provider value={actionList}>\r\n            <StoreContext.Provider value={state}>\r\n                {children}\r\n            </StoreContext.Provider>\r\n        </DispatchContext.Provider>\r\n    )\r\n}\r\n","export interface Zoom {\r\n    scale: number;\r\n    scrollX: number,\r\n    scrollY: number,\r\n}\r\n\r\nexport const zoomSettings = {max: 20, min: 1, speed: 1.17};\r\n","export class ColorService {\r\n    getHexContrast(hex: string = '#fff', bw = true) {\r\n        if (hex.indexOf('#') === 0) {\r\n            hex = hex.slice(1);\r\n        }\r\n        if (hex.length === 3) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        if (hex.length !== 6) {\r\n            throw new Error('Invalid HEX color.');\r\n        }\r\n        let r: any = parseInt(hex.slice(0, 2), 16),\r\n            g: any = parseInt(hex.slice(2, 4), 16),\r\n            b: any = parseInt(hex.slice(4, 6), 16);\r\n        if (bw) {\r\n            return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n                ? '#000000'\r\n                : '#FFFFFF';\r\n        }\r\n        r = (255 - r).toString(16);\r\n        g = (255 - g).toString(16);\r\n        b = (255 - b).toString(16);\r\n        return \"#\" + this.padZero(r) + this.padZero(g) + this.padZero(b);\r\n    }\r\n\r\n    strRgbContrast(str: string = 'rgb(0,0,0)') {\r\n        return this.getHexContrast(this.strRgbToHex(str));\r\n    }\r\n\r\n    strRgbToHex(str: string) {\r\n        const matchColors = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\r\n        const match = matchColors.exec(str);\r\n        if (match && match[1] && match[2] && match[3]) {\r\n            return this.rgbToHex(parseInt(match[1]),parseInt(match[2]), parseInt(match[3]))\r\n        }\r\n        throw new Error('string is not rgba')\r\n    }\r\n\r\n    private padZero(str: string, len: number = 2) {\r\n        let zeros = new Array(len).join('0');\r\n        return (zeros + str).slice(-len);\r\n    }\r\n\r\n    private componentToHex(c: number) {\r\n        const hex = c.toString(16);\r\n        return hex.length == 1 ? \"0\" + hex : hex;\r\n    }\r\n\r\n    private rgbToHex(r: number, g: number, b: number) {\r\n        return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\r\n    }\r\n}\r\n\r\nexport const colorService = new ColorService();\r\n","import React, {FunctionComponent, useEffect, useRef} from \"react\";\r\nimport './Scroll.scss'\r\nimport cls from 'classnames'\r\n\r\nexport interface ScrollPropsType {\r\n    horizontal?: boolean;\r\n    size?: number;\r\n    scroll: number;\r\n    onScroll?: (event: React.UIEvent<HTMLDivElement>) => void;\r\n}\r\n\r\nexport const Scroll: FunctionComponent<ScrollPropsType> =\r\n    ({horizontal = false, size = 0, onScroll, scroll}) => {\r\n        const ref = useRef<HTMLDivElement>(document.createElement('div'));\r\n        const overflow = ref.current ? ref.current[horizontal ? 'offsetWidth' : 'offsetHeight'] + size : 0;\r\n\r\n        useEffect(() => {\r\n            ref.current[!horizontal ? 'scrollTop' : 'scrollLeft'] = scroll;\r\n        }, [scroll])\r\n        return (\r\n\r\n            <div ref={ref} className={cls('scroll', {horizontal})} onScroll={onScroll}>\r\n                <div className=\"overflow\" style={{[horizontal ? 'width' : 'height']: overflow}}/>\r\n            </div>\r\n        )\r\n    }\r\n","import React from \"react\";\r\n\r\nexport const Child = ({children}: any) => {\r\n    return children;\r\n}\r\n","export const paths: { [key: string]: { [key: string]: { path: number[][], symbol: number[][] } } } =\r\n    {\r\n        'qx3': {\r\n            'tltrbr': {path: [[1, 0], [1, 1], [0.75, 1], [0, .25], [0, 0]], symbol: [[.75, .5]]},\r\n            'bltltr': {path: [[0, 0], [1, 0], [1, .25], [.25, 1], [0, 1]], symbol: [[.4, .5]]},\r\n            'tlblbr': {path: [[0, 1], [0, 0], [.25, 0], [1, .75], [1, 1]], symbol: [[.25, .75]]},\r\n            'blbrtr': {path: [[1, 1], [1, 0], [.75, 0], [0, .75], [0, 1]], symbol: [[.6, .75]]}\r\n        },\r\n        'qx': {\r\n            'tr': {path: [[1, 0], [1, .75], [.25, 0]], symbol: [[.8, .35]]},\r\n            'tl': {path: [[0, 0], [.75, 0], [0, .75]], symbol: [[.2, .35]]},\r\n            'bl': {path: [[0, 1], [0, .25], [.75, 1]], symbol: [[.2, .95]]},\r\n            'br': {path: [[1, 1], [.25, 1], [1, .25]], symbol: [[.8, .95]]}\r\n        },\r\n        'sx': {\r\n            'tr': {path: [[1, 0], [1, .5], [.5, .5], [.5, 0]], symbol: [[.8, .35]]},\r\n            'tl': {path: [[0, 0], [.5, 0], [.5, .5], [0, .5]], symbol: [[.2, .35]]},\r\n            'bl': {path: [[0, 1], [0, .5], [.5, .5], [.5, 1]], symbol: [[.2, .95]]},\r\n            'br': {path: [[1, 1], [.5, 1], [.5, .5], [1, .5]], symbol: [[.8, .95]]}\r\n        },\r\n        '\\\\': {\r\n            'tlbr': {path: [[0, 0], [0, .25], [.75, 1], [1, 1], [1, .75], [.25, 0]], symbol: [[.5, .75]]}\r\n        },\r\n        '/': {\r\n            'bltr': {path: [[1, 0], [1, .25], [.25, 1], [0, 1], [0, .75], [.75, 0]], symbol: [[.5, .75]]}\r\n        },\r\n        'x': {\r\n            'trtrblbr': {path: [[0, 0], [0, 1], [1, 1], [1, 0]], symbol: [[.5, .7]]}\r\n        },\r\n        'vx': {\r\n            'tlbl': {path: [[0, 0], [.5, 0], [.5, 1], [0, 1]], symbol: [[.25, .7]]},\r\n            'trbr': {path: [[.5, 0], [1, 0], [1, 1], [.5, 1]], symbol: [[.75, .7]]}\r\n        },\r\n        'hx': {\r\n            'trtl': {path: [[0, 0], [1, 0], [1, .5], [0, .5]], symbol: [[.5, .35]]},\r\n            'brbl': {path: [[0, .5], [1, .5], [1, 1], [0, 1]], symbol: [[.5, .9]]}\r\n        }\r\n    };\r\n","import React, {FunctionComponent} from 'react';\r\nimport './Panel.scss'\r\nimport cls from 'classnames';\r\n\r\nexport interface PanelType {\r\n    vertical?: boolean;\r\n    size?: number;\r\n    border?: 'Left' | 'Right' | 'Top' | 'Bottom';\r\n}\r\n\r\nexport const Panel: FunctionComponent<PanelType> =\r\n    ({\r\n         vertical,\r\n         children,\r\n         size,\r\n         border = 'Bottom'\r\n     }) => {\r\n        const style: any = {};\r\n        if (size) {\r\n            style[vertical ? 'width' : 'height'] = size;\r\n        }\r\n        if (border) {\r\n            style['border' + border] = '1px solid #cecece'\r\n        }\r\n        return (\r\n            <div style={style} className={cls({vertical}, 'Panel', 'p-1')}>{children}</div>\r\n        )\r\n    }\r\n\r\n","import React, {FunctionComponent, useCallback, useContext} from \"react\";\r\nimport './Palette.scss'\r\nimport {PaletteType} from \"../../types/paletteType\";\r\nimport cls from 'classnames'\r\nimport {colorService} from \"../../services/colorService\";\r\nimport {DispatchContext, StoreContext} from \"../Store\";\r\nimport {SymbolType, symbolTypes} from \"../../types/symbol\";\r\nimport {Thread} from \"../../types/thread\";\r\n\r\nexport interface PalettePropsType {\r\n    onDoubleClick?: (symbol: SymbolType) => void,\r\n    palette: PaletteType\r\n}\r\n\r\nexport const Palette: FunctionComponent<PalettePropsType> = ({palette, onDoubleClick}) => {\r\n    const {symbol: selectedSymbol} = useContext(StoreContext);\r\n    const {setSymbol} = useContext(DispatchContext);\r\n    return (\r\n        <div className=\"Palette\">\r\n            {symbolTypes\r\n                .sort((a, b) => {\r\n                    const threadA = palette[a];\r\n                    const threadB = palette[b];\r\n                    if (!!threadA && !!threadB || !threadA && !threadB) return a > b ? -1 : 1;\r\n                    return threadA ? -1 : 1;\r\n                })\r\n                .map((symbol, index) => {\r\n                        const thread: Thread | undefined = palette[symbol];\r\n                        const contrastColor = thread ? colorService.strRgbContrast(thread.color) : 'black';\r\n                        const style = {borderColor: contrastColor, color: contrastColor, backgroundColor: thread?.color}\r\n                        return (\r\n                            <div className={cls('colorBox', {selected: selectedSymbol == symbol})}\r\n                                 key={index}\r\n                                 style={style}\r\n                                 title={thread && (thread.vendor + ' ' + thread.name)}\r\n                                 onDoubleClick={e => onDoubleClick && onDoubleClick(symbol)}\r\n                                 onContextMenu={e => {\r\n                                     e.preventDefault();\r\n                                     onDoubleClick && onDoubleClick(symbol)\r\n                                 }}\r\n                                 onClick={e => setSymbol(symbol)}>\r\n                                {symbol}\r\n                            </div>\r\n                        )\r\n                    }\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import anchor from '../assets/threads/anchor.json'\r\nimport dmc from '../assets/threads/dmc.json'\r\nimport gamma from '../assets/threads/gamma.json'\r\nimport maderia from '../assets/threads/maderia.json'\r\n\r\nexport interface Thread {\r\n    color: string;\r\n    name: string;\r\n    vendor: string;\r\n}\r\n\r\nexport const vendors: { [key: string]: Thread[] } = {\r\n    anchor: anchor.map(t => ({...t, vendor: 'anchor'})),\r\n    dmc: dmc.map(t => ({...t, vendor: 'dmc'})),\r\n    gamma: gamma.map(t => ({...t, vendor: 'gamma'})),\r\n    maderia: maderia.map(t => ({...t, vendor: 'maderia'})),\r\n} as any;\r\n","import React, {FunctionComponent, useEffect, useMemo, useState} from \"react\";\r\nimport {Thread, vendors} from \"../../types/thread\";\r\nimport cls from 'classnames';\r\nimport './PaletteEdit.scss';\r\nimport {colorService} from \"../../services/colorService\";\r\n\r\nexport interface PaletteEditType {\r\n    thread?: Thread,\r\n    onSave?: (thread: Thread) => void\r\n    onCancel?: () => void\r\n    onDelete?: () => void\r\n    edit?: boolean\r\n}\r\n\r\nexport const PaletteEdit: FunctionComponent<PaletteEditType> =\r\n    ({\r\n         thread,\r\n         onSave,\r\n         onCancel,\r\n         onDelete\r\n     }) => {\r\n        const [vendor, setVendor] = useState(thread?.vendor || Object.keys(vendors)[0])\r\n        const [search, setSearch] = useState<string>('')\r\n        const [selectedThread, setThread] = useState<Thread>(thread || vendors[vendor][0]);\r\n\r\n        useEffect(() => {\r\n            if (thread) {\r\n                setVendor(thread.vendor as string)\r\n            }\r\n        }, [thread])\r\n\r\n        function deleteHandler() {\r\n            if (window.confirm('Do you really want to delete thread from project?')) {\r\n                onDelete && onDelete();\r\n            }\r\n        }\r\n\r\n        const threads = useMemo(() => vendors[vendor].filter(thread => !search.length || thread.name.indexOf(search) !== -1), [vendor, search])\r\n\r\n        return (\r\n            <div className=\"PaletteEdit\">\r\n                <hr/>\r\n                <label>Vendor</label>\r\n                <select value={vendor} onChange={e => setVendor(e.target.value)}>\r\n                    {Object.keys(vendors).map(vendor =>\r\n                        <option key={vendor} value={vendor}>{vendor}</option>)}\r\n                </select>\r\n                <hr/>\r\n                <label>Threads</label>\r\n                <input placeholder='search code...' value={search} onChange={e => setSearch(e.target.value)}/>\r\n                <div className=\"threadContainer\">\r\n                    {threads.map((thread, key) => {\r\n                            const color = colorService.strRgbContrast(thread.color);\r\n                            return (\r\n                                <div\r\n                                    style={{\r\n                                        borderColor: color,\r\n                                        backgroundColor: thread.color,\r\n                                        color: color\r\n                                    }}\r\n                                    onClick={e => setThread(thread)}\r\n                                    onDoubleClick={e => onSave && onSave(thread)}\r\n                                    key={key}\r\n                                    className={cls('thread', {selected: thread.name === selectedThread?.name})}>\r\n                                    {thread.name}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    )}\r\n                </div>\r\n                <hr/>\r\n                <button onClick={e => onSave && onSave(selectedThread)}>Save</button>\r\n                <button onClick={e => onCancel && onCancel()}>Cancel</button>\r\n                <button onClick={deleteHandler}>Delete</button>\r\n            </div>\r\n        )\r\n    }\r\n","import React, {FunctionComponent, useContext, useEffect, useMemo, useState} from \"react\";\r\nimport {Panel} from \"../Panel/Panel\";\r\nimport {Palette} from \"../Palette/Palette\";\r\nimport {PaletteType} from \"../../types/paletteType\";\r\nimport {PaletteEdit} from \"../PaleteEdit/PaletteEdit\";\r\nimport {SymbolType, symbolTypes} from \"../../types/symbol\";\r\nimport {Thread} from \"../../types/thread\";\r\nimport {Modal} from \"react-bootstrap\";\r\n\r\nexport interface RightPanelType {\r\n    onChange: (palette: PaletteType) => void,\r\n    onDelete: (symbol: SymbolType) => void,\r\n    palette: PaletteType\r\n}\r\n\r\nexport const LeftPanel: FunctionComponent<RightPanelType> = ({palette = {}, onChange, onDelete}) => {\r\n    const [modalOpened, setModalOpened] = useState(false);\r\n    const [editSymbol, setEditSymbol] = useState<SymbolType>(symbolTypes[0]);\r\n\r\n    function saveHandler(thread: Thread) {\r\n        onChange({...palette, [editSymbol]: thread});\r\n        setModalOpened(false)\r\n    }\r\n\r\n    function deleteHandler() {\r\n        onDelete(editSymbol);\r\n        setModalOpened(false)\r\n    }\r\n\r\n    function editHandler(symbol: SymbolType) {\r\n        setEditSymbol(symbol);\r\n        setModalOpened(true);\r\n    }\r\n\r\n    return (\r\n        <Panel size={82} vertical={true} border={\"Right\"}>\r\n            <Palette palette={palette} onDoubleClick={editHandler}/>\r\n            <Modal show={modalOpened} onHide={() => setModalOpened(false)}>\r\n                <Modal.Body>\r\n                    <PaletteEdit thread={palette[editSymbol]}\r\n                                 onSave={saveHandler}\r\n                                 onCancel={() => setModalOpened(false)}\r\n                                 onDelete={deleteHandler}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Panel>\r\n    )\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport {DispatchContext, StoreContext} from \"../Store\";\r\nimport {viewTypes} from \"../../types/viewType\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\n\r\nexport const ViewToolBar = () => {\r\n    const {view: currentView} = useContext(StoreContext);\r\n    const {setView} = useContext(DispatchContext)\r\n\r\n    return (\r\n        <ButtonGroup className={'mr-1'}>\r\n            {viewTypes.map((viewType, key) =>\r\n                <Button size={\"sm\"} key={key} active={viewType === currentView}\r\n                        onClick={() => setView(viewType)}>\r\n                    {viewType}\r\n                </Button>\r\n            )}\r\n        </ButtonGroup>\r\n    )\r\n}\r\n","export const backColors = [\r\n    '#ffffff',\r\n    '#e5d9c2',\r\n    '#b3c2cc',\r\n    '#cfe3cf',\r\n    '#e3bdbd',\r\n    '#c4c4c4',\r\n    '#b88c82',\r\n    '#e5122b',\r\n    '#005e33',\r\n    '#474747',\r\n    '#2b4269',\r\n    '#c7d1d4',\r\n]\r\n","import React, {FunctionComponent, useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport './ImageEdit.scss'\r\nimport {Picture, Project} from \"../../types/project\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nexport interface ImageEditProps {\r\n    onChange: (picture?: Picture) => void;\r\n    project: Project\r\n}\r\n\r\nexport const ImageEdit: FunctionComponent<ImageEditProps> = ({project, onChange}) => {\r\n\r\n    const newPicture = {height: 0, width: 0, left: 0, top: 0, sWidth: 0, sHeight: 0, opacity: .5};\r\n    const [picture, setPicture] = useState<Picture>(newPicture);\r\n    const [lock, setLock] = useState(true)\r\n    const aspect = useMemo(() => picture.width / picture.height, [picture])\r\n    const maxSize = useMemo(() => ({\r\n        width: aspect < 1 ? project.height : Math.floor(project.width / aspect),\r\n        height: aspect >= 1 ? project.width : Math.floor(aspect * project.height)\r\n    }), [aspect, picture])\r\n\r\n    function fileChange(e: any) {\r\n        const {target: {files: [file]}} = e;\r\n        if (file as File) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                if (e.target) {\r\n                    const image = new Image();\r\n                    image.onload = () => {\r\n                        if (e.target) {\r\n                            const aspect = image.width / image.height;\r\n                            setPicture({\r\n                                ...picture,\r\n                                data: e.target.result as string,\r\n                                left: 0, top: 0, height: image.height, width: image.width,\r\n                                sWidth: aspect >= 1 ? project.width : Math.floor(aspect * project.height),\r\n                                sHeight: aspect < 1 ? project.height : Math.floor(project.width / aspect),\r\n                            })\r\n                        }\r\n                    }\r\n                    image.src = e.target.result as string;\r\n                }\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    function changeSize(size: number, prop: string) {\r\n        const newSize = {[prop]: size};\r\n        if (lock) {\r\n            newSize[(prop === 'sWidth' ? 'sHeight' : 'sWidth')] = prop === 'sWidth' ? Math.floor(size / aspect) : Math.floor(size * aspect);\r\n        }\r\n        setPicture({...picture, ...newSize})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (project.picture) {\r\n            setPicture(project.picture);\r\n        }\r\n    }, [project.picture])\r\n\r\n    return (\r\n        <div className={'ImageEdit'}>\r\n            {picture.data && <img src={picture.data}/>}\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.File accept=\"image/*\" label=\"Image\" onChange={fileChange}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check label={'Lock aspect ratio'}\r\n                                checked={lock}\r\n                                onChange={() => setLock(!lock)}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Height</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={maxSize.height}\r\n                                  value={picture.sHeight}\r\n                                  onChange={e => changeSize(parseInt(e.target.value), 'sHeight')}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Width</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={maxSize.width}\r\n                                  value={picture.sWidth}\r\n                                  onChange={e => changeSize(parseInt(e.target.value), 'sWidth')}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>offset X</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={maxSize.width}\r\n                                  value={picture.left}\r\n                                  onChange={e => setPicture({...picture, left: parseInt(e.target.value)})}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>offset Y</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={maxSize.height}\r\n                                  value={picture.top}\r\n                                  onChange={e => setPicture({...picture, top: parseInt(e.target.value)})}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Opacity %</Form.Label>\r\n                    <Form.Control type={'number'}\r\n                                  min={0}\r\n                                  max={100}\r\n                                  value={Math.floor(picture.opacity * 100)}\r\n                                  onChange={e => setPicture({...picture, opacity: parseInt(e.target.value) / 100})}/>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={() => onChange({...picture})}>Save</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {FunctionComponent, useRef, useState} from \"react\";\r\nimport {Button, ButtonGroup, Modal, Overlay} from \"react-bootstrap\";\r\nimport {ChromePicker, GithubPicker} from 'react-color';\r\nimport {backColors} from \"../../types/backColors\";\r\nimport {Picture, Project} from \"../../types/project\";\r\nimport {ImageEdit} from \"../ImageEdit/ImageEdit\";\r\n\r\nexport interface BackToolBarType {\r\n    onChangeColor: (color: string) => void,\r\n    onChangePicture: (picture?: Picture) => void,\r\n    project: Project;\r\n}\r\n\r\nexport const BackToolBar: FunctionComponent<BackToolBarType> = ({onChangeColor, project, onChangePicture}) => {\r\n\r\n    const colorRef = useRef<any>(null);\r\n    const colorCustomRef = useRef<any>(null);\r\n    const [modal, setModal] = useState<'custom' | 'color' | 'image' | null>(null);\r\n\r\n    return (\r\n        <ButtonGroup>\r\n            <Button onClick={() => setModal('color')} ref={colorRef} size={\"sm\"}>Color</Button>\r\n            <Overlay target={colorRef.current}\r\n                     placement={'bottom-start'}\r\n                     rootClose={true}\r\n                     show={modal === 'color'}\r\n                     onHide={() => setModal(null)}>\r\n                {(props: any) => (\r\n                    <div {...props} style={{...props.style, top: 6,}}>\r\n                        <GithubPicker colors={backColors} onChange={color => {\r\n                            setModal(null);\r\n                            onChangeColor(color.hex)\r\n                        }}/>\r\n                    </div>\r\n                )}\r\n            </Overlay>\r\n            <Button onClick={() => setModal('custom')} ref={colorCustomRef} size={\"sm\"}>Custom Color</Button>\r\n            <Overlay target={colorCustomRef.current}\r\n                     rootClose={true}\r\n                     onHide={() => setModal(null)}\r\n                     placement={'bottom-start'}\r\n                     show={modal === 'custom'}>\r\n                {(props: any) => (\r\n                    <div {...props} style={{...props.style, top: 6,}}>\r\n                        <ChromePicker\r\n                            color={project.color}\r\n                            disableAlpha={true}\r\n                            onChangeComplete={color => onChangeColor(color.hex)}/>\r\n                    </div>\r\n                )}\r\n            </Overlay>\r\n            <Button size={\"sm\"} onClick={() => setModal('image')}>Image</Button>\r\n            <Modal show={modal === 'image'} onHide={() => setModal(null)}>\r\n                <Modal.Body>\r\n                    <ImageEdit project={project} onChange={picture => {\r\n                        setModal(null);\r\n                        onChangePicture(picture);\r\n                    }}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </ButtonGroup>\r\n    );\r\n}\r\n","import React, {FunctionComponent, useContext} from \"react\";\r\nimport {Panel} from \"../Panel/Panel\";\r\nimport {stitchTypes} from \"../../types/stitch\";\r\nimport {DispatchContext, StoreContext} from \"../Store\";\r\nimport {ViewToolBar} from \"../ViewToolBar/ViewToolBar\";\r\nimport {BackToolBar, BackToolBarType} from \"../BackPanel/BackToolBar\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport qx3 from '../../assets/qx3.svg';\r\nimport sx from '../../assets/sx.svg';\r\nimport half from '../../assets/half.svg';\r\nimport x from '../../assets/x.svg';\r\nimport qx from '../../assets/qx.svg';\r\nimport vx from '../../assets/vx.svg';\r\nimport hx from '../../assets/hx.svg';\r\n\r\nexport type TopPanelType = {} & BackToolBarType\r\n\r\nexport const TopPanel: FunctionComponent<TopPanelType> = ({onChangeColor, project, onChangePicture}) => {\r\n\r\n    const {setStitchType} = useContext(DispatchContext);\r\n    const {stitchType} = useContext(StoreContext);\r\n\r\n    return (\r\n        <Panel>\r\n            <ButtonGroup className={\"mr-1\"}>\r\n                {stitchTypes.map((type, index) =>\r\n                    <Button size={\"sm\"}\r\n                            active={type === stitchType}\r\n                            key={index}\r\n                            onClick={() => setStitchType(type)}>\r\n                        {type === 'qx3' && <img src={qx3}/>}\r\n                        {type === 'sx' && <img src={sx}/>}\r\n                        {type === 'x' && <img src={x}/>}\r\n                        {type === 'qx' && <img src={qx}/>}\r\n                        {type === 'vx' && <img src={vx}/>}\r\n                        {type === 'hx' && <img src={hx}/>}\r\n                        {type === '\\\\' && <img src={half}/>}\r\n                        {type === '/' && <img src={half} style={{transform:'rotate(90deg)'}}/>}\r\n                    </Button>\r\n                )}\r\n            </ButtonGroup>\r\n            <ViewToolBar/>\r\n            <BackToolBar project={project}\r\n                         onChangeColor={onChangeColor}\r\n                         onChangePicture={onChangePicture}\r\n            />\r\n            <Link to={`/print/${project.id}`} target={'_blank'} component={Button}>Print</Link>\r\n        </Panel>\r\n    )\r\n}\r\n","import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\nimport './Editor.scss';\nimport {GridType, Project} from \"../../types/project\";\nimport {Canvas} from \"../Canvas/Canvas\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport {projectService} from \"../../services/dataService\";\nimport {StoreContext} from \"../Store\";\nimport {LeftPanel} from \"../RightPanel/LeftPanel\";\nimport {TopPanel} from \"../TopPanel/TopPanel\";\nimport {Direction, Stitch, StitchType} from \"../../types/stitch\";\nimport {SymbolType} from \"../../types/symbol\";\nimport {Cell} from \"../../types/cell\";\nimport {paths} from \"../../types/paths\";\n\nexport const Editor = () => {\n    const [project, setProject] = useState<Project>();\n    const {id} = useParams();\n    const history = useHistory();\n    const {symbol, stitchType} = useContext(StoreContext);\n\n\n    function deleteThreadHandler(symbol: SymbolType) {\n        if (project) {\n            Object.keys(project.grid).forEach((rowIndex: any) => {\n                Object.keys(project.grid[rowIndex]).forEach((colIndex: any) => {\n                    const cell = project.grid[rowIndex][colIndex].filter(stitch => stitch.symbol !== symbol);\n                    if (!cell.length) {\n                        deleteCell(project.grid, rowIndex, colIndex)\n                    } else {\n                        project.grid[rowIndex][colIndex] = [...cell];\n                    }\n                })\n            })\n            const newPalette = {...project.palette}\n            delete newPalette[symbol];\n            setProject({...project, palette: newPalette, grid: {...project.grid}} as Project);\n        }\n    }\n\n    function deleteCell(grid: GridType, rowIndex: number, colIndex: number): GridType {\n        delete grid[rowIndex][colIndex];\n        if (Object.keys(grid[rowIndex]).length === 0) {\n            delete grid[rowIndex];\n        }\n        return grid;\n    }\n\n    function cellClickHandler(rowIndex: number, colIndex: number, direction: Direction, contextMenu: boolean) {\n        if (!project) return\n        const newGrid = {...project.grid};\n        if (!newGrid[rowIndex]) newGrid[rowIndex] = {};\n        if (symbol && project.palette[symbol]) {\n            if (!contextMenu) {\n                newGrid[rowIndex][colIndex] = newCell(symbol, direction, newGrid[rowIndex][colIndex] || [])\n            } else {\n                deleteCell(newGrid, rowIndex, colIndex)\n            }\n            setProject({...project, grid: newGrid} as Project);\n        }\n    }\n\n    function changeColorHandler(color: string) {\n        setProject({...project, color} as Project)\n    }\n\n    const newCell = useCallback((symbol: SymbolType, clickDirection: Direction, cell: Cell): Cell => {\n        const keys = Object.keys(paths[stitchType]);\n        const regexp = /.{1,2}/g;\n        let directions: any = [];\n        switch (stitchType as StitchType) {\n            case 'vx':\n                directions = clickDirection.indexOf('l') !== -1 ? keys[0].match(regexp) : keys[1].match(regexp);\n                break;\n            case 'hx':\n                directions = clickDirection.indexOf('t') !== -1 ? keys[0].match(regexp) : keys[1].match(regexp);\n                break;\n            case 'sx':\n            case 'qx':\n                directions = [clickDirection];\n                break;\n            case 'qx3':\n                const foundKey = keys.find(key => (key.match(regexp) as any)[1] === clickDirection) as string;\n                directions = foundKey.match(regexp);\n                break;\n            case'/':\n            case'\\\\':\n            case'x':\n                directions = keys[0].match(regexp)\n                break;\n        }\n        const newStitch: Stitch = {symbol, type: stitchType, directions};\n        const newCell = [...cell.filter(stitch => {\n            return !stitch.directions.filter(direction => directions.find((newDirection: Direction) => newDirection === direction)).length\n        }), newStitch];\n        return newCell;\n    }, [stitchType])\n\n    useEffect(() => {\n        projectService.get(id).then(res => {\n            if (res) {\n                setProject(res)\n            } else {\n                history.push('/');\n            }\n        });\n    }, [])\n\n    useEffect(() => {\n        if (project) projectService.save(project).then(() => console.log('saved'))\n    }, [project])\n\n    if (!project) return null;\n\n    return (\n        <div className=\"editor\">\n            <TopPanel project={project}\n                      onChangePicture={picture => setProject({...project, picture} as Project)}\n                      onChangeColor={changeColorHandler}/>\n            <div className=\"mainArea\">\n                <LeftPanel palette={project.palette}\n                           onChange={palette => setProject({...project, palette} as Project)}\n                           onDelete={deleteThreadHandler}\n                />\n                <Canvas project={project} onCellClick={cellClickHandler}/>\n            </div>\n        </div>\n    );\n}\n","import React, {FunctionComponent} from \"react\";\r\nimport {PaletteType} from \"../../types/paletteType\";\r\nimport {SymbolType} from \"../../types/symbol\";\r\n\r\nexport interface StitchTableProps {\r\n    symbols: SymbolType[]\r\n    palette: PaletteType\r\n}\r\n\r\nexport const StitchTable: FunctionComponent<StitchTableProps> = ({symbols, palette}) => {\r\n\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead>\r\n            <tr>\r\n                <th>Sym</th>\r\n                <th>Vendor</th>\r\n                <th>Number</th>\r\n                <th>Threads</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {symbols.map((symbol, index) => {\r\n                const thread = palette[symbol as any];\r\n                return (<tr key={index}>\r\n                    <td>{symbol}</td>\r\n                    <td>{thread.vendor}</td>\r\n                    <td>{thread.name}</td>\r\n                    <td>2</td>\r\n                </tr>);\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport './Print.scss'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {projectService} from \"../../services/dataService\";\r\nimport {Project} from \"../../types/project\";\r\nimport {Cell} from \"../../types/cell\";\r\nimport {StitchTable} from \"../StitchTable/StitchTable\";\r\n\r\nexport const Print = () => {\r\n    const {id} = useParams();\r\n    const [project, setProject] = useState<Project>();\r\n    const [xStitches, backStitches, halfStitch] = useMemo(() => {\r\n        const xStitches: Set<string> = new Set(),\r\n            backStitches: Set<string> = new Set(),\r\n            halfStitch: Set<string> = new Set();\r\n        if (project) {\r\n            Object.keys(project.grid).forEach((rowIndex) => {\r\n                Object.keys(project.grid[rowIndex as any]).forEach(cellIndex => {\r\n                    const cell = project.grid[rowIndex as any][cellIndex as any] as Cell;\r\n                    cell.forEach(stitch => {\r\n                        if (['\\\\', '/'].indexOf(stitch.type) !== -1) {\r\n                            halfStitch.add(stitch.symbol);\r\n                        } else {\r\n                            xStitches.add(stitch.symbol);\r\n                        }\r\n                    })\r\n                })\r\n            });\r\n        }\r\n        return [Array.from(xStitches), Array.from(backStitches), Array.from(halfStitch)];\r\n    }, [project]);\r\n\r\n    useEffect(() => {\r\n        projectService.get(id).then(setProject);\r\n    }, [])\r\n\r\n    if (!project) return null;\r\n\r\n    return (\r\n        <div className=\"Print\">\r\n            <div className=\"Paper\">\r\n                <h3>X stitches</h3>\r\n                <StitchTable palette={project.palette} symbols={xStitches}/>\r\n\r\n                {!!backStitches.length && [\r\n                    <h3>Back stitches</h3>,\r\n                    <StitchTable palette={project.palette} symbols={backStitches}/>\r\n                ]}\r\n\r\n                {!!halfStitch.length && [\r\n                    <h3>Half stitches</h3>,\r\n                    <StitchTable palette={project.palette} symbols={halfStitch}/>\r\n                ]}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\n\r\nexport const Test = () => {\r\n    const ref = useRef<HTMLDivElement>(document.createElement('div'));\r\n    let clicked = false;\r\n\r\n    function mouseDownHandler(res: boolean) {\r\n        clicked = res;\r\n    }\r\n\r\n    function mouseMoveHandler() {\r\n        console.log(clicked);\r\n        if (ref.current) {\r\n            ref.current.innerHTML = clicked + '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{width: '100vw', height: '100vh'}}\r\n            onMouseDown={e => mouseDownHandler(true)}\r\n            onMouseMove={mouseMoveHandler}\r\n            onMouseUp={e => mouseDownHandler(false)}>\r\n            {clicked.toString()}\r\n            <div ref={ref}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route, HashRouter\r\n} from \"react-router-dom\";\r\nimport {ProjectEdit} from \"./ProjectEdit/ProjectEdit\";\r\nimport {Home} from \"./Home/Home\";\r\nimport {Editor} from \"./Editor/Editor\";\r\nimport {Store} from \"./Store\";\r\nimport {Print} from \"./Print/Print\";\r\nimport {Test} from \"./Test/Test\";\r\n\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Store>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path=\"/edit/:id?\">\r\n                        <ProjectEdit/>\r\n                    </Route>\r\n                    <Route path=\"/draw/:id\">\r\n                        <Editor/>\r\n                    </Route>\r\n                    <Route path=\"/print/:id\">\r\n                        <Print/>\r\n                    </Route>\r\n                    <Route path=\"/test\">\r\n                        <Test/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </Store>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/half.38cce50b.svg\";"],"sourceRoot":""}